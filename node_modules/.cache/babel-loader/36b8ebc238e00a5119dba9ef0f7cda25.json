{"ast":null,"code":"'use strict';\n\nvar ES2015 = require('./es2015');\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar assign = require('./helpers/assign');\n\nvar $setProto = require('./helpers/setProto');\n\nvar callBound = require('./helpers/callBound');\n\nvar getIteratorMethod = require('./helpers/getIteratorMethod');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $arrayPush = callBound('Array.prototype.push');\n\nvar $getProto = require('./helpers/getProto');\n\nvar ES2016 = assign(assign({}, ES2015), {\n  // https://www.ecma-international.org/ecma-262/7.0/#sec-samevaluenonnumber\n  SameValueNonNumber: function SameValueNonNumber(x, y) {\n    if (typeof x === 'number' || typeof x !== typeof y) {\n      throw new TypeError('SameValueNonNumber requires two non-number values of the same type.');\n    }\n\n    return this.SameValue(x, y);\n  },\n  // https://www.ecma-international.org/ecma-262/7.0/#sec-iterabletoarraylike\n  IterableToArrayLike: function IterableToArrayLike(items) {\n    var usingIterator = getIteratorMethod(this, items);\n\n    if (typeof usingIterator !== 'undefined') {\n      var iterator = this.GetIterator(items, usingIterator);\n      var values = [];\n      var next = true;\n\n      while (next) {\n        next = this.IteratorStep(iterator);\n\n        if (next) {\n          var nextValue = this.IteratorValue(next);\n          $arrayPush(values, nextValue);\n        }\n      }\n\n      return values;\n    }\n\n    return this.ToObject(items);\n  },\n  // https://ecma-international.org/ecma-262/7.0/#sec-ordinarygetprototypeof\n  OrdinaryGetPrototypeOf: function (O) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: O must be an Object');\n    }\n\n    if (!$getProto) {\n      throw new $TypeError('This environment does not support fetching prototypes.');\n    }\n\n    return $getProto(O);\n  },\n  // https://ecma-international.org/ecma-262/7.0/#sec-ordinarysetprototypeof\n  OrdinarySetPrototypeOf: function (O, V) {\n    if (this.Type(V) !== 'Object' && this.Type(V) !== 'Null') {\n      throw new $TypeError('Assertion failed: V must be Object or Null');\n    }\n    /*\n    var extensible = this.IsExtensible(O);\n    var current = this.OrdinaryGetPrototypeOf(O);\n    if (this.SameValue(V, current)) {\n    \treturn true;\n    }\n    if (!extensible) {\n    \treturn false;\n    }\n    */\n\n\n    try {\n      $setProto(O, V);\n    } catch (e) {\n      return false;\n    }\n\n    return this.OrdinaryGetPrototypeOf(O) === V;\n    /*\n    var p = V;\n    var done = false;\n    while (!done) {\n    \tif (p === null) {\n    \t\tdone = true;\n    \t} else if (this.SameValue(p, O)) {\n    \t\treturn false;\n    \t} else {\n    \t\tif (wat) {\n    \t\t\tdone = true;\n    \t\t} else {\n    \t\t\tp = p.[[Prototype]];\n    \t\t}\n    \t}\n     }\n     O.[[Prototype]] = V;\n     return true;\n     */\n  }\n});\nmodule.exports = ES2016;","map":{"version":3,"sources":["C:/Users/gordon/Desktop/testRecrutement/node_modules/es-abstract/es2016.js"],"names":["ES2015","require","GetIntrinsic","assign","$setProto","callBound","getIteratorMethod","$TypeError","$arrayPush","$getProto","ES2016","SameValueNonNumber","x","y","TypeError","SameValue","IterableToArrayLike","items","usingIterator","iterator","GetIterator","values","next","IteratorStep","nextValue","IteratorValue","ToObject","OrdinaryGetPrototypeOf","O","Type","OrdinarySetPrototypeOf","V","e","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,oBAAD,CAAvB;;AAEA,IAAII,SAAS,GAAGJ,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIK,iBAAiB,GAAGL,OAAO,CAAC,6BAAD,CAA/B;;AAEA,IAAIM,UAAU,GAAGL,YAAY,CAAC,aAAD,CAA7B;AACA,IAAIM,UAAU,GAAGH,SAAS,CAAC,sBAAD,CAA1B;;AACA,IAAII,SAAS,GAAGR,OAAO,CAAC,oBAAD,CAAvB;;AAEA,IAAIS,MAAM,GAAGP,MAAM,CAACA,MAAM,CAAC,EAAD,EAAKH,MAAL,CAAP,EAAqB;AACvC;AACAW,EAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4BC,CAA5B,EAA+BC,CAA/B,EAAkC;AACrD,QAAI,OAAOD,CAAP,KAAa,QAAb,IAAyB,OAAOA,CAAP,KAAa,OAAOC,CAAjD,EAAoD;AACnD,YAAM,IAAIC,SAAJ,CAAc,qEAAd,CAAN;AACA;;AACD,WAAO,KAAKC,SAAL,CAAeH,CAAf,EAAkBC,CAAlB,CAAP;AACA,GAPsC;AASvC;AACAG,EAAAA,mBAAmB,EAAE,SAASA,mBAAT,CAA6BC,KAA7B,EAAoC;AACxD,QAAIC,aAAa,GAAGZ,iBAAiB,CAAC,IAAD,EAAOW,KAAP,CAArC;;AACA,QAAI,OAAOC,aAAP,KAAyB,WAA7B,EAA0C;AACzC,UAAIC,QAAQ,GAAG,KAAKC,WAAL,CAAiBH,KAAjB,EAAwBC,aAAxB,CAAf;AACA,UAAIG,MAAM,GAAG,EAAb;AACA,UAAIC,IAAI,GAAG,IAAX;;AACA,aAAOA,IAAP,EAAa;AACZA,QAAAA,IAAI,GAAG,KAAKC,YAAL,CAAkBJ,QAAlB,CAAP;;AACA,YAAIG,IAAJ,EAAU;AACT,cAAIE,SAAS,GAAG,KAAKC,aAAL,CAAmBH,IAAnB,CAAhB;AACAd,UAAAA,UAAU,CAACa,MAAD,EAASG,SAAT,CAAV;AACA;AACD;;AACD,aAAOH,MAAP;AACA;;AAED,WAAO,KAAKK,QAAL,CAAcT,KAAd,CAAP;AACA,GA3BsC;AA6BvC;AACAU,EAAAA,sBAAsB,EAAE,UAAUC,CAAV,EAAa;AACpC,QAAI,KAAKC,IAAL,CAAUD,CAAV,MAAiB,QAArB,EAA+B;AAC9B,YAAM,IAAIrB,UAAJ,CAAe,uCAAf,CAAN;AACA;;AACD,QAAI,CAACE,SAAL,EAAgB;AACf,YAAM,IAAIF,UAAJ,CAAe,wDAAf,CAAN;AACA;;AACD,WAAOE,SAAS,CAACmB,CAAD,CAAhB;AACA,GAtCsC;AAwCvC;AACAE,EAAAA,sBAAsB,EAAE,UAAUF,CAAV,EAAaG,CAAb,EAAgB;AACvC,QAAI,KAAKF,IAAL,CAAUE,CAAV,MAAiB,QAAjB,IAA6B,KAAKF,IAAL,CAAUE,CAAV,MAAiB,MAAlD,EAA0D;AACzD,YAAM,IAAIxB,UAAJ,CAAe,4CAAf,CAAN;AACA;AACD;;;;;;;;;;;;AAUA,QAAI;AACHH,MAAAA,SAAS,CAACwB,CAAD,EAAIG,CAAJ,CAAT;AACA,KAFD,CAEE,OAAOC,CAAP,EAAU;AACX,aAAO,KAAP;AACA;;AACD,WAAO,KAAKL,sBAAL,CAA4BC,CAA5B,MAAmCG,CAA1C;AACA;;;;;;;;;;;;;;;;;;;AAmBA;AAhFsC,CAArB,CAAnB;AAmFAE,MAAM,CAACC,OAAP,GAAiBxB,MAAjB","sourcesContent":["'use strict';\n\nvar ES2015 = require('./es2015');\nvar GetIntrinsic = require('./GetIntrinsic');\nvar assign = require('./helpers/assign');\nvar $setProto = require('./helpers/setProto');\n\nvar callBound = require('./helpers/callBound');\nvar getIteratorMethod = require('./helpers/getIteratorMethod');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $arrayPush = callBound('Array.prototype.push');\nvar $getProto = require('./helpers/getProto');\n\nvar ES2016 = assign(assign({}, ES2015), {\n\t// https://www.ecma-international.org/ecma-262/7.0/#sec-samevaluenonnumber\n\tSameValueNonNumber: function SameValueNonNumber(x, y) {\n\t\tif (typeof x === 'number' || typeof x !== typeof y) {\n\t\t\tthrow new TypeError('SameValueNonNumber requires two non-number values of the same type.');\n\t\t}\n\t\treturn this.SameValue(x, y);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/7.0/#sec-iterabletoarraylike\n\tIterableToArrayLike: function IterableToArrayLike(items) {\n\t\tvar usingIterator = getIteratorMethod(this, items);\n\t\tif (typeof usingIterator !== 'undefined') {\n\t\t\tvar iterator = this.GetIterator(items, usingIterator);\n\t\t\tvar values = [];\n\t\t\tvar next = true;\n\t\t\twhile (next) {\n\t\t\t\tnext = this.IteratorStep(iterator);\n\t\t\t\tif (next) {\n\t\t\t\t\tvar nextValue = this.IteratorValue(next);\n\t\t\t\t\t$arrayPush(values, nextValue);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn values;\n\t\t}\n\n\t\treturn this.ToObject(items);\n\t},\n\n\t// https://ecma-international.org/ecma-262/7.0/#sec-ordinarygetprototypeof\n\tOrdinaryGetPrototypeOf: function (O) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: O must be an Object');\n\t\t}\n\t\tif (!$getProto) {\n\t\t\tthrow new $TypeError('This environment does not support fetching prototypes.');\n\t\t}\n\t\treturn $getProto(O);\n\t},\n\n\t// https://ecma-international.org/ecma-262/7.0/#sec-ordinarysetprototypeof\n\tOrdinarySetPrototypeOf: function (O, V) {\n\t\tif (this.Type(V) !== 'Object' && this.Type(V) !== 'Null') {\n\t\t\tthrow new $TypeError('Assertion failed: V must be Object or Null');\n\t\t}\n\t\t/*\n\t\tvar extensible = this.IsExtensible(O);\n\t\tvar current = this.OrdinaryGetPrototypeOf(O);\n\t\tif (this.SameValue(V, current)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!extensible) {\n\t\t\treturn false;\n\t\t}\n\t\t*/\n\t\ttry {\n\t\t\t$setProto(O, V);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.OrdinaryGetPrototypeOf(O) === V;\n\t\t/*\n\t\tvar p = V;\n\t\tvar done = false;\n\t\twhile (!done) {\n\t\t\tif (p === null) {\n\t\t\t\tdone = true;\n\t\t\t} else if (this.SameValue(p, O)) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tif (wat) {\n\t\t\t\t\tdone = true;\n\t\t\t\t} else {\n\t\t\t\t\tp = p.[[Prototype]];\n\t\t\t\t}\n\t\t\t}\n\t\t }\n\t\t O.[[Prototype]] = V;\n\t\t return true;\n\t\t */\n\t}\n});\n\nmodule.exports = ES2016;\n"]},"metadata":{},"sourceType":"script"}