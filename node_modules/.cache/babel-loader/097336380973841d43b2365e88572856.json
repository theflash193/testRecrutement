{"ast":null,"code":"'use strict';\n\nvar has = require('has');\n\nvar toPrimitive = require('es-to-primitive/es6');\n\nvar keys = require('object-keys');\n\nvar inspect = require('object-inspect');\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $RangeError = GetIntrinsic('%RangeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $Array = GetIntrinsic('%Array%');\nvar $ArrayPrototype = $Array.prototype;\nvar $String = GetIntrinsic('%String%');\nvar $Object = GetIntrinsic('%Object%');\nvar $Number = GetIntrinsic('%Number%');\nvar $Symbol = GetIntrinsic('%Symbol%', true);\nvar $RegExp = GetIntrinsic('%RegExp%');\nvar $Date = GetIntrinsic('%Date%');\nvar $Function = GetIntrinsic('%Function%');\nvar $preventExtensions = $Object.preventExtensions;\n\nvar hasSymbols = require('has-symbols')();\n\nvar assertRecord = require('./helpers/assertRecord');\n\nvar $isNaN = require('./helpers/isNaN');\n\nvar $isFinite = require('./helpers/isFinite');\n\nvar MAX_ARRAY_LENGTH = Math.pow(2, 32) - 1;\n\nvar MAX_SAFE_INTEGER = require('./helpers/maxSafeInteger');\n\nvar assign = require('./helpers/assign');\n\nvar sign = require('./helpers/sign');\n\nvar mod = require('./helpers/mod');\n\nvar isPrimitive = require('./helpers/isPrimitive');\n\nvar forEach = require('./helpers/forEach');\n\nvar every = require('./helpers/every');\n\nvar isSamePropertyDescriptor = require('./helpers/isSamePropertyDescriptor');\n\nvar isPropertyDescriptor = require('./helpers/isPropertyDescriptor');\n\nvar parseInteger = parseInt;\n\nvar callBound = require('./helpers/callBound');\n\nvar regexTester = require('./helpers/regexTester');\n\nvar getIteratorMethod = require('./helpers/getIteratorMethod');\n\nvar getSymbolDescription = require('./helpers/getSymbolDescription');\n\nvar $PromiseThen = callBound('Promise.prototype.then', true);\nvar arraySlice = callBound('Array.prototype.slice');\nvar strSlice = callBound('String.prototype.slice');\nvar $indexOf = callBound('Array.prototype.indexOf');\nvar $push = callBound('Array.prototype.push');\nvar isBinary = regexTester(/^0b[01]+$/i);\nvar isOctal = regexTester(/^0o[0-7]+$/i);\nvar isDigit = regexTester(/^[0-9]$/);\nvar regexExec = callBound('RegExp.prototype.exec');\nvar nonWS = ['\\u0085', '\\u200b', '\\ufffe'].join('');\nvar nonWSregex = new $RegExp('[' + nonWS + ']', 'g');\nvar hasNonWS = regexTester(nonWSregex);\nvar isInvalidHexLiteral = regexTester(/^[-+]0x[0-9a-f]+$/i);\nvar $charCodeAt = callBound('String.prototype.charCodeAt');\nvar $isEnumerable = callBound('Object.prototype.propertyIsEnumerable');\nvar toStr = callBound('Object.prototype.toString');\nvar $NumberValueOf = callBound('Number.prototype.valueOf');\nvar $BooleanValueOf = callBound('Boolean.prototype.valueOf');\nvar $StringValueOf = callBound('String.prototype.valueOf');\nvar $DateValueOf = callBound('Date.prototype.valueOf');\nvar $SymbolToString = callBound('Symbol.prototype.toString', true);\nvar $floor = Math.floor;\nvar $abs = Math.abs;\nvar $ObjectCreate = $Object.create;\nvar $gOPD = $Object.getOwnPropertyDescriptor;\nvar $gOPN = $Object.getOwnPropertyNames;\nvar $gOPS = $Object.getOwnPropertySymbols;\nvar $isExtensible = $Object.isExtensible;\nvar $defineProperty = $Object.defineProperty;\n\nvar $setProto = require('./helpers/setProto');\n\nvar DefineOwnProperty = function DefineOwnProperty(ES, O, P, desc) {\n  if (!$defineProperty) {\n    if (!ES.IsDataDescriptor(desc)) {\n      // ES3 does not support getters/setters\n      return false;\n    }\n\n    if (!desc['[[Configurable]]'] || !desc['[[Writable]]']) {\n      return false;\n    } // fallback for ES3\n\n\n    if (P in O && $isEnumerable(O, P) !== !!desc['[[Enumerable]]']) {\n      // a non-enumerable existing property\n      return false;\n    } // property does not exist at all, or exists but is enumerable\n\n\n    var V = desc['[[Value]]'];\n    O[P] = V; // will use [[Define]]\n\n    return ES.SameValue(O[P], V);\n  }\n\n  $defineProperty(O, P, ES.FromPropertyDescriptor(desc));\n  return true;\n}; // whitespace from: https://es5.github.io/#x15.5.4.20\n// implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324\n\n\nvar ws = ['\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003', '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028', '\\u2029\\uFEFF'].join('');\nvar trimRegex = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');\nvar $replace = callBound('String.prototype.replace');\n\nvar trim = function (value) {\n  return $replace(value, trimRegex, '');\n};\n\nvar ES5 = require('./es5');\n\nvar hasRegExpMatcher = require('is-regex'); // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-abstract-operations\n\n\nvar ES6 = assign(assign({}, ES5), {\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-call-f-v-args\n  Call: function Call(F, V) {\n    var args = arguments.length > 2 ? arguments[2] : [];\n\n    if (!this.IsCallable(F)) {\n      throw new $TypeError(inspect(F) + ' is not a function');\n    }\n\n    return F.apply(V, args);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toprimitive\n  ToPrimitive: toPrimitive,\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toboolean\n  // ToBoolean: ES5.ToBoolean,\n  // https://ecma-international.org/ecma-262/6.0/#sec-tonumber\n  ToNumber: function ToNumber(argument) {\n    var value = isPrimitive(argument) ? argument : toPrimitive(argument, $Number);\n\n    if (typeof value === 'symbol') {\n      throw new $TypeError('Cannot convert a Symbol value to a number');\n    }\n\n    if (typeof value === 'string') {\n      if (isBinary(value)) {\n        return this.ToNumber(parseInteger(strSlice(value, 2), 2));\n      } else if (isOctal(value)) {\n        return this.ToNumber(parseInteger(strSlice(value, 2), 8));\n      } else if (hasNonWS(value) || isInvalidHexLiteral(value)) {\n        return NaN;\n      } else {\n        var trimmed = trim(value);\n\n        if (trimmed !== value) {\n          return this.ToNumber(trimmed);\n        }\n      }\n    }\n\n    return $Number(value);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tointeger\n  // ToInteger: ES5.ToNumber,\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint32\n  // ToInt32: ES5.ToInt32,\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint32\n  // ToUint32: ES5.ToUint32,\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint16\n  ToInt16: function ToInt16(argument) {\n    var int16bit = this.ToUint16(argument);\n    return int16bit >= 0x8000 ? int16bit - 0x10000 : int16bit;\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint16\n  // ToUint16: ES5.ToUint16,\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint8\n  ToInt8: function ToInt8(argument) {\n    var int8bit = this.ToUint8(argument);\n    return int8bit >= 0x80 ? int8bit - 0x100 : int8bit;\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8\n  ToUint8: function ToUint8(argument) {\n    var number = this.ToNumber(argument);\n\n    if ($isNaN(number) || number === 0 || !$isFinite(number)) {\n      return 0;\n    }\n\n    var posInt = sign(number) * $floor($abs(number));\n    return mod(posInt, 0x100);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8clamp\n  ToUint8Clamp: function ToUint8Clamp(argument) {\n    var number = this.ToNumber(argument);\n\n    if ($isNaN(number) || number <= 0) {\n      return 0;\n    }\n\n    if (number >= 0xFF) {\n      return 0xFF;\n    }\n\n    var f = $floor(argument);\n\n    if (f + 0.5 < number) {\n      return f + 1;\n    }\n\n    if (number < f + 0.5) {\n      return f;\n    }\n\n    if (f % 2 !== 0) {\n      return f + 1;\n    }\n\n    return f;\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tostring\n  ToString: function ToString(argument) {\n    if (typeof argument === 'symbol') {\n      throw new $TypeError('Cannot convert a Symbol value to a string');\n    }\n\n    return $String(argument);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toobject\n  ToObject: function ToObject(value) {\n    this.RequireObjectCoercible(value);\n    return $Object(value);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-topropertykey\n  ToPropertyKey: function ToPropertyKey(argument) {\n    var key = this.ToPrimitive(argument, $String);\n    return typeof key === 'symbol' ? key : this.ToString(key);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  ToLength: function ToLength(argument) {\n    var len = this.ToInteger(argument);\n\n    if (len <= 0) {\n      return 0;\n    } // includes converting -0 to +0\n\n\n    if (len > MAX_SAFE_INTEGER) {\n      return MAX_SAFE_INTEGER;\n    }\n\n    return len;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-canonicalnumericindexstring\n  CanonicalNumericIndexString: function CanonicalNumericIndexString(argument) {\n    if (toStr(argument) !== '[object String]') {\n      throw new $TypeError('must be a string');\n    }\n\n    if (argument === '-0') {\n      return -0;\n    }\n\n    var n = this.ToNumber(argument);\n\n    if (this.SameValue(this.ToString(n), argument)) {\n      return n;\n    }\n\n    return void 0;\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-requireobjectcoercible\n  RequireObjectCoercible: ES5.CheckObjectCoercible,\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isarray\n  IsArray: $Array.isArray || function IsArray(argument) {\n    return toStr(argument) === '[object Array]';\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-iscallable\n  // IsCallable: ES5.IsCallable,\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isconstructor\n  IsConstructor: function IsConstructor(argument) {\n    return typeof argument === 'function' && !!argument.prototype; // unfortunately there's no way to truly check this without try/catch `new argument` or Proxy\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isextensible-o\n  IsExtensible: $preventExtensions ? function IsExtensible(obj) {\n    if (isPrimitive(obj)) {\n      return false;\n    }\n\n    return $isExtensible(obj);\n  } : function isExtensible(obj) {\n    return true;\n  },\n  // eslint-disable-line no-unused-vars\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isinteger\n  IsInteger: function IsInteger(argument) {\n    if (typeof argument !== 'number' || $isNaN(argument) || !$isFinite(argument)) {\n      return false;\n    }\n\n    var abs = $abs(argument);\n    return $floor(abs) === abs;\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ispropertykey\n  IsPropertyKey: function IsPropertyKey(argument) {\n    return typeof argument === 'string' || typeof argument === 'symbol';\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-isregexp\n  IsRegExp: function IsRegExp(argument) {\n    if (!argument || typeof argument !== 'object') {\n      return false;\n    }\n\n    if (hasSymbols) {\n      var isRegExp = argument[$Symbol.match];\n\n      if (typeof isRegExp !== 'undefined') {\n        return ES5.ToBoolean(isRegExp);\n      }\n    }\n\n    return hasRegExpMatcher(argument);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevalue\n  // SameValue: ES5.SameValue,\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero\n  SameValueZero: function SameValueZero(x, y) {\n    return x === y || $isNaN(x) && $isNaN(y);\n  },\n\n  /**\n   * 7.3.2 GetV (V, P)\n   * 1. Assert: IsPropertyKey(P) is true.\n   * 2. Let O be ToObject(V).\n   * 3. ReturnIfAbrupt(O).\n   * 4. Return O.[[Get]](P, V).\n   */\n  GetV: function GetV(V, P) {\n    // 7.3.2.1\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    } // 7.3.2.2-3\n\n\n    var O = this.ToObject(V); // 7.3.2.4\n\n    return O[P];\n  },\n\n  /**\n   * 7.3.9 - https://ecma-international.org/ecma-262/6.0/#sec-getmethod\n   * 1. Assert: IsPropertyKey(P) is true.\n   * 2. Let func be GetV(O, P).\n   * 3. ReturnIfAbrupt(func).\n   * 4. If func is either undefined or null, return undefined.\n   * 5. If IsCallable(func) is false, throw a TypeError exception.\n   * 6. Return func.\n   */\n  GetMethod: function GetMethod(O, P) {\n    // 7.3.9.1\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    } // 7.3.9.2\n\n\n    var func = this.GetV(O, P); // 7.3.9.4\n\n    if (func == null) {\n      return void 0;\n    } // 7.3.9.5\n\n\n    if (!this.IsCallable(func)) {\n      throw new $TypeError(P + 'is not a function');\n    } // 7.3.9.6\n\n\n    return func;\n  },\n\n  /**\n   * 7.3.1 Get (O, P) - https://ecma-international.org/ecma-262/6.0/#sec-get-o-p\n   * 1. Assert: Type(O) is Object.\n   * 2. Assert: IsPropertyKey(P) is true.\n   * 3. Return O.[[Get]](P, O).\n   */\n  Get: function Get(O, P) {\n    // 7.3.1.1\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    } // 7.3.1.2\n\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true, got ' + inspect(P));\n    } // 7.3.1.3\n\n\n    return O[P];\n  },\n  Type: function Type(x) {\n    if (typeof x === 'symbol') {\n      return 'Symbol';\n    }\n\n    return ES5.Type(x);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-speciesconstructor\n  SpeciesConstructor: function SpeciesConstructor(O, defaultConstructor) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    var C = O.constructor;\n\n    if (typeof C === 'undefined') {\n      return defaultConstructor;\n    }\n\n    if (this.Type(C) !== 'Object') {\n      throw new $TypeError('O.constructor is not an Object');\n    }\n\n    var S = hasSymbols && $Symbol.species ? C[$Symbol.species] : void 0;\n\n    if (S == null) {\n      return defaultConstructor;\n    }\n\n    if (this.IsConstructor(S)) {\n      return S;\n    }\n\n    throw new $TypeError('no constructor found');\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-frompropertydescriptor\n  FromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return Desc;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n    var obj = {};\n\n    if ('[[Value]]' in Desc) {\n      obj.value = Desc['[[Value]]'];\n    }\n\n    if ('[[Writable]]' in Desc) {\n      obj.writable = Desc['[[Writable]]'];\n    }\n\n    if ('[[Get]]' in Desc) {\n      obj.get = Desc['[[Get]]'];\n    }\n\n    if ('[[Set]]' in Desc) {\n      obj.set = Desc['[[Set]]'];\n    }\n\n    if ('[[Enumerable]]' in Desc) {\n      obj.enumerable = Desc['[[Enumerable]]'];\n    }\n\n    if ('[[Configurable]]' in Desc) {\n      obj.configurable = Desc['[[Configurable]]'];\n    }\n\n    return obj;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-completepropertydescriptor\n  CompletePropertyDescriptor: function CompletePropertyDescriptor(Desc) {\n    /* eslint no-param-reassign: 0 */\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (this.IsGenericDescriptor(Desc) || this.IsDataDescriptor(Desc)) {\n      if (!has(Desc, '[[Value]]')) {\n        Desc['[[Value]]'] = void 0;\n      }\n\n      if (!has(Desc, '[[Writable]]')) {\n        Desc['[[Writable]]'] = false;\n      }\n    } else {\n      if (!has(Desc, '[[Get]]')) {\n        Desc['[[Get]]'] = void 0;\n      }\n\n      if (!has(Desc, '[[Set]]')) {\n        Desc['[[Set]]'] = void 0;\n      }\n    }\n\n    if (!has(Desc, '[[Enumerable]]')) {\n      Desc['[[Enumerable]]'] = false;\n    }\n\n    if (!has(Desc, '[[Configurable]]')) {\n      Desc['[[Configurable]]'] = false;\n    }\n\n    return Desc;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-set-o-p-v-throw\n  Set: function Set(O, P, V, Throw) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('O must be an Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('P must be a Property Key');\n    }\n\n    if (this.Type(Throw) !== 'Boolean') {\n      throw new $TypeError('Throw must be a Boolean');\n    }\n\n    if (Throw) {\n      O[P] = V;\n      return true;\n    } else {\n      try {\n        O[P] = V;\n      } catch (e) {\n        return false;\n      }\n    }\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-hasownproperty\n  HasOwnProperty: function HasOwnProperty(O, P) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('O must be an Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('P must be a Property Key');\n    }\n\n    return has(O, P);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-hasproperty\n  HasProperty: function HasProperty(O, P) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('O must be an Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('P must be a Property Key');\n    }\n\n    return P in O;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-isconcatspreadable\n  IsConcatSpreadable: function IsConcatSpreadable(O) {\n    if (this.Type(O) !== 'Object') {\n      return false;\n    }\n\n    if (hasSymbols && typeof $Symbol.isConcatSpreadable === 'symbol') {\n      var spreadable = this.Get(O, Symbol.isConcatSpreadable);\n\n      if (typeof spreadable !== 'undefined') {\n        return this.ToBoolean(spreadable);\n      }\n    }\n\n    return this.IsArray(O);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-invoke\n  Invoke: function Invoke(O, P) {\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('P must be a Property Key');\n    }\n\n    var argumentsList = arraySlice(arguments, 2);\n    var func = this.GetV(O, P);\n    return this.Call(func, O, argumentsList);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-getiterator\n  GetIterator: function GetIterator(obj, method) {\n    var actualMethod = method;\n\n    if (arguments.length < 2) {\n      actualMethod = getIteratorMethod(this, obj);\n    }\n\n    var iterator = this.Call(actualMethod, obj);\n\n    if (this.Type(iterator) !== 'Object') {\n      throw new $TypeError('iterator must return an object');\n    }\n\n    return iterator;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-iteratornext\n  IteratorNext: function IteratorNext(iterator, value) {\n    var result = this.Invoke(iterator, 'next', arguments.length < 2 ? [] : [value]);\n\n    if (this.Type(result) !== 'Object') {\n      throw new $TypeError('iterator next must return an object');\n    }\n\n    return result;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-iteratorcomplete\n  IteratorComplete: function IteratorComplete(iterResult) {\n    if (this.Type(iterResult) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(iterResult) is not Object');\n    }\n\n    return this.ToBoolean(this.Get(iterResult, 'done'));\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-iteratorvalue\n  IteratorValue: function IteratorValue(iterResult) {\n    if (this.Type(iterResult) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(iterResult) is not Object');\n    }\n\n    return this.Get(iterResult, 'value');\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-iteratorstep\n  IteratorStep: function IteratorStep(iterator) {\n    var result = this.IteratorNext(iterator);\n    var done = this.IteratorComplete(result);\n    return done === true ? false : result;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-iteratorclose\n  IteratorClose: function IteratorClose(iterator, completion) {\n    if (this.Type(iterator) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(iterator) is not Object');\n    }\n\n    if (!this.IsCallable(completion)) {\n      throw new $TypeError('Assertion failed: completion is not a thunk for a Completion Record');\n    }\n\n    var completionThunk = completion;\n    var iteratorReturn = this.GetMethod(iterator, 'return');\n\n    if (typeof iteratorReturn === 'undefined') {\n      return completionThunk();\n    }\n\n    var completionRecord;\n\n    try {\n      var innerResult = this.Call(iteratorReturn, iterator, []);\n    } catch (e) {\n      // if we hit here, then \"e\" is the innerResult completion that needs re-throwing\n      // if the completion is of type \"throw\", this will throw.\n      completionRecord = completionThunk();\n      completionThunk = null; // ensure it's not called twice.\n      // if not, then return the innerResult completion\n\n      throw e;\n    }\n\n    completionRecord = completionThunk(); // if innerResult worked, then throw if the completion does\n\n    completionThunk = null; // ensure it's not called twice.\n\n    if (this.Type(innerResult) !== 'Object') {\n      throw new $TypeError('iterator .return must return an object');\n    }\n\n    return completionRecord;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-createiterresultobject\n  CreateIterResultObject: function CreateIterResultObject(value, done) {\n    if (this.Type(done) !== 'Boolean') {\n      throw new $TypeError('Assertion failed: Type(done) is not Boolean');\n    }\n\n    return {\n      value: value,\n      done: done\n    };\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-regexpexec\n  RegExpExec: function RegExpExec(R, S) {\n    if (this.Type(R) !== 'Object') {\n      throw new $TypeError('R must be an Object');\n    }\n\n    if (this.Type(S) !== 'String') {\n      throw new $TypeError('S must be a String');\n    }\n\n    var exec = this.Get(R, 'exec');\n\n    if (this.IsCallable(exec)) {\n      var result = this.Call(exec, R, [S]);\n\n      if (result === null || this.Type(result) === 'Object') {\n        return result;\n      }\n\n      throw new $TypeError('\"exec\" method must return `null` or an Object');\n    }\n\n    return regexExec(R, S);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-arrayspeciescreate\n  ArraySpeciesCreate: function ArraySpeciesCreate(originalArray, length) {\n    if (!this.IsInteger(length) || length < 0) {\n      throw new $TypeError('Assertion failed: length must be an integer >= 0');\n    }\n\n    var len = length === 0 ? 0 : length;\n    var C;\n    var isArray = this.IsArray(originalArray);\n\n    if (isArray) {\n      C = this.Get(originalArray, 'constructor'); // TODO: figure out how to make a cross-realm normal Array, a same-realm Array\n      // if (this.IsConstructor(C)) {\n      // \tif C is another realm's Array, C = undefined\n      // \tObject.getPrototypeOf(Object.getPrototypeOf(Object.getPrototypeOf(Array))) === null ?\n      // }\n\n      if (this.Type(C) === 'Object' && hasSymbols && $Symbol.species) {\n        C = this.Get(C, $Symbol.species);\n\n        if (C === null) {\n          C = void 0;\n        }\n      }\n    }\n\n    if (typeof C === 'undefined') {\n      return $Array(len);\n    }\n\n    if (!this.IsConstructor(C)) {\n      throw new $TypeError('C must be a constructor');\n    }\n\n    return new C(len); // this.Construct(C, len);\n  },\n  CreateDataProperty: function CreateDataProperty(O, P, V) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    }\n\n    var oldDesc = $gOPD(O, P);\n    var extensible = oldDesc || this.IsExtensible(O);\n    var immutable = oldDesc && (!oldDesc.writable || !oldDesc.configurable);\n\n    if (immutable || !extensible) {\n      return false;\n    }\n\n    return DefineOwnProperty(this, O, P, {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Value]]': V,\n      '[[Writable]]': true\n    });\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-createdatapropertyorthrow\n  CreateDataPropertyOrThrow: function CreateDataPropertyOrThrow(O, P, V) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    }\n\n    var success = this.CreateDataProperty(O, P, V);\n\n    if (!success) {\n      throw new $TypeError('unable to create data property');\n    }\n\n    return success;\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-objectcreate\n  ObjectCreate: function ObjectCreate(proto, internalSlotsList) {\n    if (proto !== null && this.Type(proto) !== 'Object') {\n      throw new $TypeError('Assertion failed: proto must be null or an object');\n    }\n\n    var slots = arguments.length < 2 ? [] : internalSlotsList;\n\n    if (slots.length > 0) {\n      throw new $SyntaxError('es-abstract does not yet support internal slots');\n    }\n\n    if (proto === null && !$ObjectCreate) {\n      throw new $SyntaxError('native Object.create support is required to create null objects');\n    }\n\n    return $ObjectCreate(proto);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-advancestringindex\n  AdvanceStringIndex: function AdvanceStringIndex(S, index, unicode) {\n    if (this.Type(S) !== 'String') {\n      throw new $TypeError('S must be a String');\n    }\n\n    if (!this.IsInteger(index) || index < 0 || index > MAX_SAFE_INTEGER) {\n      throw new $TypeError('Assertion failed: length must be an integer >= 0 and <= 2**53');\n    }\n\n    if (this.Type(unicode) !== 'Boolean') {\n      throw new $TypeError('Assertion failed: unicode must be a Boolean');\n    }\n\n    if (!unicode) {\n      return index + 1;\n    }\n\n    var length = S.length;\n\n    if (index + 1 >= length) {\n      return index + 1;\n    }\n\n    var first = $charCodeAt(S, index);\n\n    if (first < 0xD800 || first > 0xDBFF) {\n      return index + 1;\n    }\n\n    var second = $charCodeAt(S, index + 1);\n\n    if (second < 0xDC00 || second > 0xDFFF) {\n      return index + 1;\n    }\n\n    return index + 2;\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-createmethodproperty\n  CreateMethodProperty: function CreateMethodProperty(O, P, V) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    }\n\n    var newDesc = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': false,\n      '[[Value]]': V,\n      '[[Writable]]': true\n    };\n    return DefineOwnProperty(this, O, P, newDesc);\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-definepropertyorthrow\n  DefinePropertyOrThrow: function DefinePropertyOrThrow(O, P, desc) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    }\n\n    var Desc = isPropertyDescriptor(this, desc) ? desc : this.ToPropertyDescriptor(desc);\n\n    if (!isPropertyDescriptor(this, Desc)) {\n      throw new $TypeError('Assertion failed: Desc is not a valid Property Descriptor');\n    }\n\n    return DefineOwnProperty(this, O, P, Desc);\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-deletepropertyorthrow\n  DeletePropertyOrThrow: function DeletePropertyOrThrow(O, P) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    }\n\n    var success = delete O[P];\n\n    if (!success) {\n      throw new TypeError('Attempt to delete property failed.');\n    }\n\n    return success;\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-enumerableownnames\n  EnumerableOwnNames: function EnumerableOwnNames(O) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    return keys(O);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-number-prototype-object\n  thisNumberValue: function thisNumberValue(value) {\n    if (this.Type(value) === 'Number') {\n      return value;\n    }\n\n    return $NumberValueOf(value);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-boolean-prototype-object\n  thisBooleanValue: function thisBooleanValue(value) {\n    if (this.Type(value) === 'Boolean') {\n      return value;\n    }\n\n    return $BooleanValueOf(value);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-string-prototype-object\n  thisStringValue: function thisStringValue(value) {\n    if (this.Type(value) === 'String') {\n      return value;\n    }\n\n    return $StringValueOf(value);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-date-prototype-object\n  thisTimeValue: function thisTimeValue(value) {\n    return $DateValueOf(value);\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-setintegritylevel\n  SetIntegrityLevel: function SetIntegrityLevel(O, level) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    if (level !== 'sealed' && level !== 'frozen') {\n      throw new $TypeError('Assertion failed: `level` must be `\"sealed\"` or `\"frozen\"`');\n    }\n\n    if (!$preventExtensions) {\n      throw new $SyntaxError('SetIntegrityLevel requires native `Object.preventExtensions` support');\n    }\n\n    var status = $preventExtensions(O);\n\n    if (!status) {\n      return false;\n    }\n\n    if (!$gOPN) {\n      throw new $SyntaxError('SetIntegrityLevel requires native `Object.getOwnPropertyNames` support');\n    }\n\n    var theKeys = $gOPN(O);\n    var ES = this;\n\n    if (level === 'sealed') {\n      forEach(theKeys, function (k) {\n        ES.DefinePropertyOrThrow(O, k, {\n          configurable: false\n        });\n      });\n    } else if (level === 'frozen') {\n      forEach(theKeys, function (k) {\n        var currentDesc = $gOPD(O, k);\n\n        if (typeof currentDesc !== 'undefined') {\n          var desc;\n\n          if (ES.IsAccessorDescriptor(ES.ToPropertyDescriptor(currentDesc))) {\n            desc = {\n              configurable: false\n            };\n          } else {\n            desc = {\n              configurable: false,\n              writable: false\n            };\n          }\n\n          ES.DefinePropertyOrThrow(O, k, desc);\n        }\n      });\n    }\n\n    return true;\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-testintegritylevel\n  TestIntegrityLevel: function TestIntegrityLevel(O, level) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    if (level !== 'sealed' && level !== 'frozen') {\n      throw new $TypeError('Assertion failed: `level` must be `\"sealed\"` or `\"frozen\"`');\n    }\n\n    var status = this.IsExtensible(O);\n\n    if (status) {\n      return false;\n    }\n\n    var theKeys = $gOPN(O);\n    var ES = this;\n    return theKeys.length === 0 || every(theKeys, function (k) {\n      var currentDesc = $gOPD(O, k);\n\n      if (typeof currentDesc !== 'undefined') {\n        if (currentDesc.configurable) {\n          return false;\n        }\n\n        if (level === 'frozen' && ES.IsDataDescriptor(ES.ToPropertyDescriptor(currentDesc)) && currentDesc.writable) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-ordinaryhasinstance\n  OrdinaryHasInstance: function OrdinaryHasInstance(C, O) {\n    if (this.IsCallable(C) === false) {\n      return false;\n    }\n\n    if (this.Type(O) !== 'Object') {\n      return false;\n    }\n\n    var P = this.Get(C, 'prototype');\n\n    if (this.Type(P) !== 'Object') {\n      throw new $TypeError('OrdinaryHasInstance called on an object with an invalid prototype property.');\n    }\n\n    return O instanceof C;\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-ordinaryhasproperty\n  OrdinaryHasProperty: function OrdinaryHasProperty(O, P) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: P must be a Property Key');\n    }\n\n    return P in O;\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-instanceofoperator\n  InstanceofOperator: function InstanceofOperator(O, C) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    var instOfHandler = hasSymbols && $Symbol.hasInstance ? this.GetMethod(C, $Symbol.hasInstance) : void 0;\n\n    if (typeof instOfHandler !== 'undefined') {\n      return this.ToBoolean(this.Call(instOfHandler, C, [O]));\n    }\n\n    if (!this.IsCallable(C)) {\n      throw new $TypeError('`C` is not Callable');\n    }\n\n    return this.OrdinaryHasInstance(C, O);\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-ispromise\n  IsPromise: function IsPromise(x) {\n    if (this.Type(x) !== 'Object') {\n      return false;\n    }\n\n    if (!$PromiseThen) {\n      // Promises are not supported\n      return false;\n    }\n\n    try {\n      $PromiseThen(x); // throws if not a promise\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-abstract-equality-comparison\n  'Abstract Equality Comparison': function AbstractEqualityComparison(x, y) {\n    var xType = this.Type(x);\n    var yType = this.Type(y);\n\n    if (xType === yType) {\n      return x === y; // ES6+ specified this shortcut anyways.\n    }\n\n    if (x == null && y == null) {\n      return true;\n    }\n\n    if (xType === 'Number' && yType === 'String') {\n      return this['Abstract Equality Comparison'](x, this.ToNumber(y));\n    }\n\n    if (xType === 'String' && yType === 'Number') {\n      return this['Abstract Equality Comparison'](this.ToNumber(x), y);\n    }\n\n    if (xType === 'Boolean') {\n      return this['Abstract Equality Comparison'](this.ToNumber(x), y);\n    }\n\n    if (yType === 'Boolean') {\n      return this['Abstract Equality Comparison'](x, this.ToNumber(y));\n    }\n\n    if ((xType === 'String' || xType === 'Number' || xType === 'Symbol') && yType === 'Object') {\n      return this['Abstract Equality Comparison'](x, this.ToPrimitive(y));\n    }\n\n    if (xType === 'Object' && (yType === 'String' || yType === 'Number' || yType === 'Symbol')) {\n      return this['Abstract Equality Comparison'](this.ToPrimitive(x), y);\n    }\n\n    return false;\n  },\n  // eslint-disable-next-line max-lines-per-function, max-statements, id-length, max-params\n  ValidateAndApplyPropertyDescriptor: function ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current) {\n    // this uses the ES2017+ logic, since it fixes a number of bugs in the ES2015 logic.\n    var oType = this.Type(O);\n\n    if (oType !== 'Undefined' && oType !== 'Object') {\n      throw new $TypeError('Assertion failed: O must be undefined or an Object');\n    }\n\n    if (this.Type(extensible) !== 'Boolean') {\n      throw new $TypeError('Assertion failed: extensible must be a Boolean');\n    }\n\n    if (!isPropertyDescriptor(this, Desc)) {\n      throw new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n    }\n\n    if (this.Type(current) !== 'Undefined' && !isPropertyDescriptor(this, current)) {\n      throw new $TypeError('Assertion failed: current must be a Property Descriptor, or undefined');\n    }\n\n    if (oType !== 'Undefined' && !this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: if O is not undefined, P must be a Property Key');\n    }\n\n    if (this.Type(current) === 'Undefined') {\n      if (!extensible) {\n        return false;\n      }\n\n      if (this.IsGenericDescriptor(Desc) || this.IsDataDescriptor(Desc)) {\n        if (oType !== 'Undefined') {\n          DefineOwnProperty(this, O, P, {\n            '[[Configurable]]': Desc['[[Configurable]]'],\n            '[[Enumerable]]': Desc['[[Enumerable]]'],\n            '[[Value]]': Desc['[[Value]]'],\n            '[[Writable]]': Desc['[[Writable]]']\n          });\n        }\n      } else {\n        if (!this.IsAccessorDescriptor(Desc)) {\n          throw new $TypeError('Assertion failed: Desc is not an accessor descriptor');\n        }\n\n        if (oType !== 'Undefined') {\n          return DefineOwnProperty(this, O, P, Desc);\n        }\n      }\n\n      return true;\n    }\n\n    if (this.IsGenericDescriptor(Desc) && !('[[Configurable]]' in Desc) && !('[[Enumerable]]' in Desc)) {\n      return true;\n    }\n\n    if (isSamePropertyDescriptor(this, Desc, current)) {\n      return true; // removed by ES2017, but should still be correct\n    } // \"if every field in Desc is absent, return true\" can't really match the assertion that it's a Property Descriptor\n\n\n    if (!current['[[Configurable]]']) {\n      if (Desc['[[Configurable]]']) {\n        return false;\n      }\n\n      if ('[[Enumerable]]' in Desc && !Desc['[[Enumerable]]'] === !!current['[[Enumerable]]']) {\n        return false;\n      }\n    }\n\n    if (this.IsGenericDescriptor(Desc)) {// no further validation is required.\n    } else if (this.IsDataDescriptor(current) !== this.IsDataDescriptor(Desc)) {\n      if (!current['[[Configurable]]']) {\n        return false;\n      }\n\n      if (this.IsDataDescriptor(current)) {\n        if (oType !== 'Undefined') {\n          DefineOwnProperty(this, O, P, {\n            '[[Configurable]]': current['[[Configurable]]'],\n            '[[Enumerable]]': current['[[Enumerable]]'],\n            '[[Get]]': undefined\n          });\n        }\n      } else if (oType !== 'Undefined') {\n        DefineOwnProperty(this, O, P, {\n          '[[Configurable]]': current['[[Configurable]]'],\n          '[[Enumerable]]': current['[[Enumerable]]'],\n          '[[Value]]': undefined\n        });\n      }\n    } else if (this.IsDataDescriptor(current) && this.IsDataDescriptor(Desc)) {\n      if (!current['[[Configurable]]'] && !current['[[Writable]]']) {\n        if ('[[Writable]]' in Desc && Desc['[[Writable]]']) {\n          return false;\n        }\n\n        if ('[[Value]]' in Desc && !this.SameValue(Desc['[[Value]]'], current['[[Value]]'])) {\n          return false;\n        }\n\n        return true;\n      }\n    } else if (this.IsAccessorDescriptor(current) && this.IsAccessorDescriptor(Desc)) {\n      if (!current['[[Configurable]]']) {\n        if ('[[Set]]' in Desc && !this.SameValue(Desc['[[Set]]'], current['[[Set]]'])) {\n          return false;\n        }\n\n        if ('[[Get]]' in Desc && !this.SameValue(Desc['[[Get]]'], current['[[Get]]'])) {\n          return false;\n        }\n\n        return true;\n      }\n    } else {\n      throw new $TypeError('Assertion failed: current and Desc are not both data, both accessors, or one accessor and one data.');\n    }\n\n    if (oType !== 'Undefined') {\n      return DefineOwnProperty(this, O, P, Desc);\n    }\n\n    return true;\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-ordinarydefineownproperty\n  OrdinaryDefineOwnProperty: function OrdinaryDefineOwnProperty(O, P, Desc) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: O must be an Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: P must be a Property Key');\n    }\n\n    if (!isPropertyDescriptor(this, Desc)) {\n      throw new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n    }\n\n    var desc = $gOPD(O, P);\n    var current = desc && this.ToPropertyDescriptor(desc);\n    var extensible = this.IsExtensible(O);\n    return this.ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current);\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-ordinarygetownproperty\n  OrdinaryGetOwnProperty: function OrdinaryGetOwnProperty(O, P) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: O must be an Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: P must be a Property Key');\n    }\n\n    if (!has(O, P)) {\n      return void 0;\n    }\n\n    if (!$gOPD) {\n      // ES3 fallback\n      var arrayLength = this.IsArray(O) && P === 'length';\n      var regexLastIndex = this.IsRegExp(O) && P === 'lastIndex';\n      return {\n        '[[Configurable]]': !(arrayLength || regexLastIndex),\n        '[[Enumerable]]': $isEnumerable(O, P),\n        '[[Value]]': O[P],\n        '[[Writable]]': true\n      };\n    }\n\n    return this.ToPropertyDescriptor($gOPD(O, P));\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-arraycreate\n  ArrayCreate: function ArrayCreate(length) {\n    if (!this.IsInteger(length) || length < 0) {\n      throw new $TypeError('Assertion failed: `length` must be an integer Number >= 0');\n    }\n\n    if (length > MAX_ARRAY_LENGTH) {\n      throw new $RangeError('length is greater than (2**32 - 1)');\n    }\n\n    var proto = arguments.length > 1 ? arguments[1] : $ArrayPrototype;\n    var A = []; // steps 5 - 7, and 9\n\n    if (proto !== $ArrayPrototype) {\n      // step 8\n      if (!$setProto) {\n        throw new $SyntaxError('ArrayCreate: a `proto` argument that is not `Array.prototype` is not supported in an environment that does not support setting the [[Prototype]]');\n      }\n\n      $setProto(A, proto);\n    }\n\n    if (length !== 0) {\n      // bypasses the need for step 2\n      A.length = length;\n    }\n    /* step 10, the above as a shortcut for the below\n    this.OrdinaryDefineOwnProperty(A, 'length', {\n    \t'[[Configurable]]': false,\n    \t'[[Enumerable]]': false,\n    \t'[[Value]]': length,\n    \t'[[Writable]]': true\n    });\n    */\n\n\n    return A;\n  },\n  // eslint-disable-next-line max-statements, max-lines-per-function\n  ArraySetLength: function ArraySetLength(A, Desc) {\n    if (!this.IsArray(A)) {\n      throw new $TypeError('Assertion failed: A must be an Array');\n    }\n\n    if (!isPropertyDescriptor(this, Desc)) {\n      throw new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n    }\n\n    if (!('[[Value]]' in Desc)) {\n      return this.OrdinaryDefineOwnProperty(A, 'length', Desc);\n    }\n\n    var newLenDesc = assign({}, Desc);\n    var newLen = this.ToUint32(Desc['[[Value]]']);\n    var numberLen = this.ToNumber(Desc['[[Value]]']);\n\n    if (newLen !== numberLen) {\n      throw new $RangeError('Invalid array length');\n    }\n\n    newLenDesc['[[Value]]'] = newLen;\n    var oldLenDesc = this.OrdinaryGetOwnProperty(A, 'length');\n\n    if (!this.IsDataDescriptor(oldLenDesc)) {\n      throw new $TypeError('Assertion failed: an array had a non-data descriptor on `length`');\n    }\n\n    var oldLen = oldLenDesc['[[Value]]'];\n\n    if (newLen >= oldLen) {\n      return this.OrdinaryDefineOwnProperty(A, 'length', newLenDesc);\n    }\n\n    if (!oldLenDesc['[[Writable]]']) {\n      return false;\n    }\n\n    var newWritable;\n\n    if (!('[[Writable]]' in newLenDesc) || newLenDesc['[[Writable]]']) {\n      newWritable = true;\n    } else {\n      newWritable = false;\n      newLenDesc['[[Writable]]'] = true;\n    }\n\n    var succeeded = this.OrdinaryDefineOwnProperty(A, 'length', newLenDesc);\n\n    if (!succeeded) {\n      return false;\n    }\n\n    while (newLen < oldLen) {\n      oldLen -= 1;\n      var deleteSucceeded = delete A[this.ToString(oldLen)];\n\n      if (!deleteSucceeded) {\n        newLenDesc['[[Value]]'] = oldLen + 1;\n\n        if (!newWritable) {\n          newLenDesc['[[Writable]]'] = false;\n          this.OrdinaryDefineOwnProperty(A, 'length', newLenDesc);\n          return false;\n        }\n      }\n    }\n\n    if (!newWritable) {\n      return this.OrdinaryDefineOwnProperty(A, 'length', {\n        '[[Writable]]': false\n      });\n    }\n\n    return true;\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-createhtml\n  CreateHTML: function CreateHTML(string, tag, attribute, value) {\n    if (this.Type(tag) !== 'String' || this.Type(attribute) !== 'String') {\n      throw new $TypeError('Assertion failed: `tag` and `attribute` must be strings');\n    }\n\n    var str = this.RequireObjectCoercible(string);\n    var S = this.ToString(str);\n    var p1 = '<' + tag;\n\n    if (attribute !== '') {\n      var V = this.ToString(value);\n      var escapedV = $replace(V, /\\x22/g, '&quot;');\n      p1 += '\\x20' + attribute + '\\x3D\\x22' + escapedV + '\\x22';\n    }\n\n    return p1 + '>' + S + '</' + tag + '>';\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-getownpropertykeys\n  GetOwnPropertyKeys: function GetOwnPropertyKeys(O, Type) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    if (Type === 'Symbol') {\n      return hasSymbols && $gOPS ? $gOPS(O) : [];\n    }\n\n    if (Type === 'String') {\n      if (!$gOPN) {\n        return keys(O);\n      }\n\n      return $gOPN(O);\n    }\n\n    throw new $TypeError('Assertion failed: `Type` must be `\"String\"` or `\"Symbol\"`');\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-symboldescriptivestring\n  SymbolDescriptiveString: function SymbolDescriptiveString(sym) {\n    if (this.Type(sym) !== 'Symbol') {\n      throw new $TypeError('Assertion failed: `sym` must be a Symbol');\n    }\n\n    return $SymbolToString(sym);\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-getsubstitution\n  // eslint-disable-next-line max-statements, max-params, max-lines-per-function\n  GetSubstitution: function GetSubstitution(matched, str, position, captures, replacement) {\n    if (this.Type(matched) !== 'String') {\n      throw new $TypeError('Assertion failed: `matched` must be a String');\n    }\n\n    var matchLength = matched.length;\n\n    if (this.Type(str) !== 'String') {\n      throw new $TypeError('Assertion failed: `str` must be a String');\n    }\n\n    var stringLength = str.length;\n\n    if (!this.IsInteger(position) || position < 0 || position > stringLength) {\n      throw new $TypeError('Assertion failed: `position` must be a nonnegative integer, and less than or equal to the length of `string`, got ' + inspect(position));\n    }\n\n    var ES = this;\n\n    var isStringOrHole = function (capture, index, arr) {\n      return ES.Type(capture) === 'String' || !(index in arr);\n    };\n\n    if (!this.IsArray(captures) || !every(captures, isStringOrHole)) {\n      throw new $TypeError('Assertion failed: `captures` must be a List of Strings, got ' + inspect(captures));\n    }\n\n    if (this.Type(replacement) !== 'String') {\n      throw new $TypeError('Assertion failed: `replacement` must be a String');\n    }\n\n    var tailPos = position + matchLength;\n    var m = captures.length;\n    var result = '';\n\n    for (var i = 0; i < replacement.length; i += 1) {\n      // if this is a $, and it's not the end of the replacement\n      var current = replacement[i];\n      var isLast = i + 1 >= replacement.length;\n      var nextIsLast = i + 2 >= replacement.length;\n\n      if (current === '$' && !isLast) {\n        var next = replacement[i + 1];\n\n        if (next === '$') {\n          result += '$';\n          i += 1;\n        } else if (next === '&') {\n          result += matched;\n          i += 1;\n        } else if (next === '`') {\n          result += position === 0 ? '' : strSlice(str, 0, position - 1);\n          i += 1;\n        } else if (next === \"'\") {\n          result += tailPos >= stringLength ? '' : strSlice(str, tailPos);\n          i += 1;\n        } else {\n          var nextNext = nextIsLast ? null : replacement[i + 2];\n\n          if (isDigit(next) && next !== '0' && (nextIsLast || !isDigit(nextNext))) {\n            // $1 through $9, and not followed by a digit\n            var n = parseInteger(next, 10); // if (n > m, impl-defined)\n\n            result += n <= m && this.Type(captures[n - 1]) === 'Undefined' ? '' : captures[n - 1];\n            i += 1;\n          } else if (isDigit(next) && (nextIsLast || isDigit(nextNext))) {\n            // $00 through $99\n            var nn = next + nextNext;\n            var nnI = parseInteger(nn, 10) - 1; // if nn === '00' or nn > m, impl-defined\n\n            result += nn <= m && this.Type(captures[nnI]) === 'Undefined' ? '' : captures[nnI];\n            i += 2;\n          } else {\n            result += '$';\n          }\n        }\n      } else {\n        // the final $, or else not a $\n        result += replacement[i];\n      }\n    }\n\n    return result;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-todatestring\n  ToDateString: function ToDateString(tv) {\n    if (this.Type(tv) !== 'Number') {\n      throw new $TypeError('Assertion failed: `tv` must be a Number');\n    }\n\n    if ($isNaN(tv)) {\n      return 'Invalid Date';\n    }\n\n    return $Date(tv);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-createlistfromarraylike\n  CreateListFromArrayLike: function CreateListFromArrayLike(obj) {\n    var elementTypes = arguments.length > 1 ? arguments[1] : ['Undefined', 'Null', 'Boolean', 'String', 'Symbol', 'Number', 'Object'];\n\n    if (this.Type(obj) !== 'Object') {\n      throw new $TypeError('Assertion failed: `obj` must be an Object');\n    }\n\n    if (!this.IsArray(elementTypes)) {\n      throw new $TypeError('Assertion failed: `elementTypes`, if provided, must be an array');\n    }\n\n    var len = this.ToLength(this.Get(obj, 'length'));\n    var list = [];\n    var index = 0;\n\n    while (index < len) {\n      var indexName = this.ToString(index);\n      var next = this.Get(obj, indexName);\n      var nextType = this.Type(next);\n\n      if ($indexOf(elementTypes, nextType) < 0) {\n        throw new $TypeError('item type ' + nextType + ' is not a valid elementType');\n      }\n\n      $push(list, next);\n      index += 1;\n    }\n\n    return list;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-getprototypefromconstructor\n  GetPrototypeFromConstructor: function GetPrototypeFromConstructor(constructor, intrinsicDefaultProto) {\n    var intrinsic = GetIntrinsic(intrinsicDefaultProto); // throws if not a valid intrinsic\n\n    if (!this.IsConstructor(constructor)) {\n      throw new $TypeError('Assertion failed: `constructor` must be a constructor');\n    }\n\n    var proto = this.Get(constructor, 'prototype');\n\n    if (this.Type(proto) !== 'Object') {\n      if (!(constructor instanceof $Function)) {\n        // ignore other realms, for now\n        throw new $TypeError('cross-realm constructors not currently supported');\n      }\n\n      proto = intrinsic;\n    }\n\n    return proto;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-setfunctionname\n  SetFunctionName: function SetFunctionName(F, name) {\n    if (typeof F !== 'function') {\n      throw new $TypeError('Assertion failed: `F` must be a function');\n    }\n\n    if (!this.IsExtensible(F) || has(F, 'name')) {\n      throw new $TypeError('Assertion failed: `F` must be extensible, and must not have a `name` own property');\n    }\n\n    var nameType = this.Type(name);\n\n    if (nameType !== 'Symbol' && nameType !== 'String') {\n      throw new $TypeError('Assertion failed: `name` must be a Symbol or a String');\n    }\n\n    if (nameType === 'Symbol') {\n      var description = getSymbolDescription(name);\n      name = typeof description === 'undefined' ? '' : '[' + description + ']';\n    }\n\n    if (arguments.length > 2) {\n      var prefix = arguments[2];\n      name = prefix + ' ' + name;\n    }\n\n    return this.DefinePropertyOrThrow(F, 'name', {\n      '[[Value]]': name,\n      '[[Writable]]': false,\n      '[[Enumerable]]': false,\n      '[[Configurable]]': true\n    });\n  }\n});\ndelete ES6.CheckObjectCoercible; // renamed in ES6 to RequireObjectCoercible\n\nmodule.exports = ES6;","map":{"version":3,"sources":["C:/Users/gordon/Desktop/testRecrutement/node_modules/es-abstract/es2015.js"],"names":["has","require","toPrimitive","keys","inspect","GetIntrinsic","$TypeError","$RangeError","$SyntaxError","$Array","$ArrayPrototype","prototype","$String","$Object","$Number","$Symbol","$RegExp","$Date","$Function","$preventExtensions","preventExtensions","hasSymbols","assertRecord","$isNaN","$isFinite","MAX_ARRAY_LENGTH","Math","pow","MAX_SAFE_INTEGER","assign","sign","mod","isPrimitive","forEach","every","isSamePropertyDescriptor","isPropertyDescriptor","parseInteger","parseInt","callBound","regexTester","getIteratorMethod","getSymbolDescription","$PromiseThen","arraySlice","strSlice","$indexOf","$push","isBinary","isOctal","isDigit","regexExec","nonWS","join","nonWSregex","hasNonWS","isInvalidHexLiteral","$charCodeAt","$isEnumerable","toStr","$NumberValueOf","$BooleanValueOf","$StringValueOf","$DateValueOf","$SymbolToString","$floor","floor","$abs","abs","$ObjectCreate","create","$gOPD","getOwnPropertyDescriptor","$gOPN","getOwnPropertyNames","$gOPS","getOwnPropertySymbols","$isExtensible","isExtensible","$defineProperty","defineProperty","$setProto","DefineOwnProperty","ES","O","P","desc","IsDataDescriptor","V","SameValue","FromPropertyDescriptor","ws","trimRegex","RegExp","$replace","trim","value","ES5","hasRegExpMatcher","ES6","Call","F","args","arguments","length","IsCallable","apply","ToPrimitive","ToNumber","argument","NaN","trimmed","ToInt16","int16bit","ToUint16","ToInt8","int8bit","ToUint8","number","posInt","ToUint8Clamp","f","ToString","ToObject","RequireObjectCoercible","ToPropertyKey","key","ToLength","len","ToInteger","CanonicalNumericIndexString","n","CheckObjectCoercible","IsArray","isArray","IsConstructor","IsExtensible","obj","IsInteger","IsPropertyKey","IsRegExp","isRegExp","match","ToBoolean","SameValueZero","x","y","GetV","GetMethod","func","Get","Type","SpeciesConstructor","defaultConstructor","C","constructor","S","species","Desc","writable","get","set","enumerable","configurable","CompletePropertyDescriptor","IsGenericDescriptor","Set","Throw","e","HasOwnProperty","HasProperty","IsConcatSpreadable","isConcatSpreadable","spreadable","Symbol","Invoke","argumentsList","GetIterator","method","actualMethod","iterator","IteratorNext","result","IteratorComplete","iterResult","IteratorValue","IteratorStep","done","IteratorClose","completion","completionThunk","iteratorReturn","completionRecord","innerResult","CreateIterResultObject","RegExpExec","R","exec","ArraySpeciesCreate","originalArray","CreateDataProperty","oldDesc","extensible","immutable","CreateDataPropertyOrThrow","success","ObjectCreate","proto","internalSlotsList","slots","AdvanceStringIndex","index","unicode","first","second","CreateMethodProperty","newDesc","DefinePropertyOrThrow","ToPropertyDescriptor","DeletePropertyOrThrow","TypeError","EnumerableOwnNames","thisNumberValue","thisBooleanValue","thisStringValue","thisTimeValue","SetIntegrityLevel","level","status","theKeys","k","currentDesc","IsAccessorDescriptor","TestIntegrityLevel","OrdinaryHasInstance","OrdinaryHasProperty","InstanceofOperator","instOfHandler","hasInstance","IsPromise","AbstractEqualityComparison","xType","yType","ValidateAndApplyPropertyDescriptor","current","oType","undefined","OrdinaryDefineOwnProperty","OrdinaryGetOwnProperty","arrayLength","regexLastIndex","ArrayCreate","A","ArraySetLength","newLenDesc","newLen","ToUint32","numberLen","oldLenDesc","oldLen","newWritable","succeeded","deleteSucceeded","CreateHTML","string","tag","attribute","str","p1","escapedV","GetOwnPropertyKeys","SymbolDescriptiveString","sym","GetSubstitution","matched","position","captures","replacement","matchLength","stringLength","isStringOrHole","capture","arr","tailPos","m","i","isLast","nextIsLast","next","nextNext","nn","nnI","ToDateString","tv","CreateListFromArrayLike","elementTypes","list","indexName","nextType","GetPrototypeFromConstructor","intrinsicDefaultProto","intrinsic","SetFunctionName","name","nameType","description","prefix","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar has = require('has');\nvar toPrimitive = require('es-to-primitive/es6');\nvar keys = require('object-keys');\nvar inspect = require('object-inspect');\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $RangeError = GetIntrinsic('%RangeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $Array = GetIntrinsic('%Array%');\nvar $ArrayPrototype = $Array.prototype;\nvar $String = GetIntrinsic('%String%');\nvar $Object = GetIntrinsic('%Object%');\nvar $Number = GetIntrinsic('%Number%');\nvar $Symbol = GetIntrinsic('%Symbol%', true);\nvar $RegExp = GetIntrinsic('%RegExp%');\nvar $Date = GetIntrinsic('%Date%');\nvar $Function = GetIntrinsic('%Function%');\nvar $preventExtensions = $Object.preventExtensions;\n\nvar hasSymbols = require('has-symbols')();\n\nvar assertRecord = require('./helpers/assertRecord');\nvar $isNaN = require('./helpers/isNaN');\nvar $isFinite = require('./helpers/isFinite');\nvar MAX_ARRAY_LENGTH = Math.pow(2, 32) - 1;\nvar MAX_SAFE_INTEGER = require('./helpers/maxSafeInteger');\n\nvar assign = require('./helpers/assign');\nvar sign = require('./helpers/sign');\nvar mod = require('./helpers/mod');\nvar isPrimitive = require('./helpers/isPrimitive');\nvar forEach = require('./helpers/forEach');\nvar every = require('./helpers/every');\nvar isSamePropertyDescriptor = require('./helpers/isSamePropertyDescriptor');\nvar isPropertyDescriptor = require('./helpers/isPropertyDescriptor');\nvar parseInteger = parseInt;\nvar callBound = require('./helpers/callBound');\nvar regexTester = require('./helpers/regexTester');\nvar getIteratorMethod = require('./helpers/getIteratorMethod');\nvar getSymbolDescription = require('./helpers/getSymbolDescription');\n\nvar $PromiseThen = callBound('Promise.prototype.then', true);\nvar arraySlice = callBound('Array.prototype.slice');\nvar strSlice = callBound('String.prototype.slice');\nvar $indexOf = callBound('Array.prototype.indexOf');\nvar $push = callBound('Array.prototype.push');\n\nvar isBinary = regexTester(/^0b[01]+$/i);\nvar isOctal = regexTester(/^0o[0-7]+$/i);\nvar isDigit = regexTester(/^[0-9]$/);\nvar regexExec = callBound('RegExp.prototype.exec');\nvar nonWS = ['\\u0085', '\\u200b', '\\ufffe'].join('');\nvar nonWSregex = new $RegExp('[' + nonWS + ']', 'g');\nvar hasNonWS = regexTester(nonWSregex);\nvar isInvalidHexLiteral = regexTester(/^[-+]0x[0-9a-f]+$/i);\nvar $charCodeAt = callBound('String.prototype.charCodeAt');\nvar $isEnumerable = callBound('Object.prototype.propertyIsEnumerable');\n\nvar toStr = callBound('Object.prototype.toString');\n\nvar $NumberValueOf = callBound('Number.prototype.valueOf');\nvar $BooleanValueOf = callBound('Boolean.prototype.valueOf');\nvar $StringValueOf = callBound('String.prototype.valueOf');\nvar $DateValueOf = callBound('Date.prototype.valueOf');\nvar $SymbolToString = callBound('Symbol.prototype.toString', true);\n\nvar $floor = Math.floor;\nvar $abs = Math.abs;\n\nvar $ObjectCreate = $Object.create;\nvar $gOPD = $Object.getOwnPropertyDescriptor;\nvar $gOPN = $Object.getOwnPropertyNames;\nvar $gOPS = $Object.getOwnPropertySymbols;\nvar $isExtensible = $Object.isExtensible;\nvar $defineProperty = $Object.defineProperty;\nvar $setProto = require('./helpers/setProto');\n\nvar DefineOwnProperty = function DefineOwnProperty(ES, O, P, desc) {\n\tif (!$defineProperty) {\n\t\tif (!ES.IsDataDescriptor(desc)) {\n\t\t\t// ES3 does not support getters/setters\n\t\t\treturn false;\n\t\t}\n\t\tif (!desc['[[Configurable]]'] || !desc['[[Writable]]']) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// fallback for ES3\n\t\tif (P in O && $isEnumerable(O, P) !== !!desc['[[Enumerable]]']) {\n\t\t\t// a non-enumerable existing property\n\t\t\treturn false;\n\t\t}\n\n\t\t// property does not exist at all, or exists but is enumerable\n\t\tvar V = desc['[[Value]]'];\n\t\tO[P] = V; // will use [[Define]]\n\t\treturn ES.SameValue(O[P], V);\n\t}\n\t$defineProperty(O, P, ES.FromPropertyDescriptor(desc));\n\treturn true;\n};\n\n// whitespace from: https://es5.github.io/#x15.5.4.20\n// implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324\nvar ws = [\n\t'\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003',\n\t'\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028',\n\t'\\u2029\\uFEFF'\n].join('');\nvar trimRegex = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');\nvar $replace = callBound('String.prototype.replace');\nvar trim = function (value) {\n\treturn $replace(value, trimRegex, '');\n};\n\nvar ES5 = require('./es5');\n\nvar hasRegExpMatcher = require('is-regex');\n\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-abstract-operations\nvar ES6 = assign(assign({}, ES5), {\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-call-f-v-args\n\tCall: function Call(F, V) {\n\t\tvar args = arguments.length > 2 ? arguments[2] : [];\n\t\tif (!this.IsCallable(F)) {\n\t\t\tthrow new $TypeError(inspect(F) + ' is not a function');\n\t\t}\n\t\treturn F.apply(V, args);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toprimitive\n\tToPrimitive: toPrimitive,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toboolean\n\t// ToBoolean: ES5.ToBoolean,\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-tonumber\n\tToNumber: function ToNumber(argument) {\n\t\tvar value = isPrimitive(argument) ? argument : toPrimitive(argument, $Number);\n\t\tif (typeof value === 'symbol') {\n\t\t\tthrow new $TypeError('Cannot convert a Symbol value to a number');\n\t\t}\n\t\tif (typeof value === 'string') {\n\t\t\tif (isBinary(value)) {\n\t\t\t\treturn this.ToNumber(parseInteger(strSlice(value, 2), 2));\n\t\t\t} else if (isOctal(value)) {\n\t\t\t\treturn this.ToNumber(parseInteger(strSlice(value, 2), 8));\n\t\t\t} else if (hasNonWS(value) || isInvalidHexLiteral(value)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar trimmed = trim(value);\n\t\t\t\tif (trimmed !== value) {\n\t\t\t\t\treturn this.ToNumber(trimmed);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $Number(value);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tointeger\n\t// ToInteger: ES5.ToNumber,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint32\n\t// ToInt32: ES5.ToInt32,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint32\n\t// ToUint32: ES5.ToUint32,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint16\n\tToInt16: function ToInt16(argument) {\n\t\tvar int16bit = this.ToUint16(argument);\n\t\treturn int16bit >= 0x8000 ? int16bit - 0x10000 : int16bit;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint16\n\t// ToUint16: ES5.ToUint16,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint8\n\tToInt8: function ToInt8(argument) {\n\t\tvar int8bit = this.ToUint8(argument);\n\t\treturn int8bit >= 0x80 ? int8bit - 0x100 : int8bit;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8\n\tToUint8: function ToUint8(argument) {\n\t\tvar number = this.ToNumber(argument);\n\t\tif ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }\n\t\tvar posInt = sign(number) * $floor($abs(number));\n\t\treturn mod(posInt, 0x100);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8clamp\n\tToUint8Clamp: function ToUint8Clamp(argument) {\n\t\tvar number = this.ToNumber(argument);\n\t\tif ($isNaN(number) || number <= 0) { return 0; }\n\t\tif (number >= 0xFF) { return 0xFF; }\n\t\tvar f = $floor(argument);\n\t\tif (f + 0.5 < number) { return f + 1; }\n\t\tif (number < f + 0.5) { return f; }\n\t\tif (f % 2 !== 0) { return f + 1; }\n\t\treturn f;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tostring\n\tToString: function ToString(argument) {\n\t\tif (typeof argument === 'symbol') {\n\t\t\tthrow new $TypeError('Cannot convert a Symbol value to a string');\n\t\t}\n\t\treturn $String(argument);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toobject\n\tToObject: function ToObject(value) {\n\t\tthis.RequireObjectCoercible(value);\n\t\treturn $Object(value);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-topropertykey\n\tToPropertyKey: function ToPropertyKey(argument) {\n\t\tvar key = this.ToPrimitive(argument, $String);\n\t\treturn typeof key === 'symbol' ? key : this.ToString(key);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n\tToLength: function ToLength(argument) {\n\t\tvar len = this.ToInteger(argument);\n\t\tif (len <= 0) { return 0; } // includes converting -0 to +0\n\t\tif (len > MAX_SAFE_INTEGER) { return MAX_SAFE_INTEGER; }\n\t\treturn len;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-canonicalnumericindexstring\n\tCanonicalNumericIndexString: function CanonicalNumericIndexString(argument) {\n\t\tif (toStr(argument) !== '[object String]') {\n\t\t\tthrow new $TypeError('must be a string');\n\t\t}\n\t\tif (argument === '-0') { return -0; }\n\t\tvar n = this.ToNumber(argument);\n\t\tif (this.SameValue(this.ToString(n), argument)) { return n; }\n\t\treturn void 0;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-requireobjectcoercible\n\tRequireObjectCoercible: ES5.CheckObjectCoercible,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isarray\n\tIsArray: $Array.isArray || function IsArray(argument) {\n\t\treturn toStr(argument) === '[object Array]';\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-iscallable\n\t// IsCallable: ES5.IsCallable,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isconstructor\n\tIsConstructor: function IsConstructor(argument) {\n\t\treturn typeof argument === 'function' && !!argument.prototype; // unfortunately there's no way to truly check this without try/catch `new argument` or Proxy\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isextensible-o\n\tIsExtensible: $preventExtensions\n\t\t? function IsExtensible(obj) {\n\t\t\tif (isPrimitive(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn $isExtensible(obj);\n\t\t}\n\t\t: function isExtensible(obj) { return true; }, // eslint-disable-line no-unused-vars\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isinteger\n\tIsInteger: function IsInteger(argument) {\n\t\tif (typeof argument !== 'number' || $isNaN(argument) || !$isFinite(argument)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar abs = $abs(argument);\n\t\treturn $floor(abs) === abs;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ispropertykey\n\tIsPropertyKey: function IsPropertyKey(argument) {\n\t\treturn typeof argument === 'string' || typeof argument === 'symbol';\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-isregexp\n\tIsRegExp: function IsRegExp(argument) {\n\t\tif (!argument || typeof argument !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\tif (hasSymbols) {\n\t\t\tvar isRegExp = argument[$Symbol.match];\n\t\t\tif (typeof isRegExp !== 'undefined') {\n\t\t\t\treturn ES5.ToBoolean(isRegExp);\n\t\t\t}\n\t\t}\n\t\treturn hasRegExpMatcher(argument);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevalue\n\t// SameValue: ES5.SameValue,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero\n\tSameValueZero: function SameValueZero(x, y) {\n\t\treturn (x === y) || ($isNaN(x) && $isNaN(y));\n\t},\n\n\t/**\n\t * 7.3.2 GetV (V, P)\n\t * 1. Assert: IsPropertyKey(P) is true.\n\t * 2. Let O be ToObject(V).\n\t * 3. ReturnIfAbrupt(O).\n\t * 4. Return O.[[Get]](P, V).\n\t */\n\tGetV: function GetV(V, P) {\n\t\t// 7.3.2.1\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\n\t\t// 7.3.2.2-3\n\t\tvar O = this.ToObject(V);\n\n\t\t// 7.3.2.4\n\t\treturn O[P];\n\t},\n\n\t/**\n\t * 7.3.9 - https://ecma-international.org/ecma-262/6.0/#sec-getmethod\n\t * 1. Assert: IsPropertyKey(P) is true.\n\t * 2. Let func be GetV(O, P).\n\t * 3. ReturnIfAbrupt(func).\n\t * 4. If func is either undefined or null, return undefined.\n\t * 5. If IsCallable(func) is false, throw a TypeError exception.\n\t * 6. Return func.\n\t */\n\tGetMethod: function GetMethod(O, P) {\n\t\t// 7.3.9.1\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\n\t\t// 7.3.9.2\n\t\tvar func = this.GetV(O, P);\n\n\t\t// 7.3.9.4\n\t\tif (func == null) {\n\t\t\treturn void 0;\n\t\t}\n\n\t\t// 7.3.9.5\n\t\tif (!this.IsCallable(func)) {\n\t\t\tthrow new $TypeError(P + 'is not a function');\n\t\t}\n\n\t\t// 7.3.9.6\n\t\treturn func;\n\t},\n\n\t/**\n\t * 7.3.1 Get (O, P) - https://ecma-international.org/ecma-262/6.0/#sec-get-o-p\n\t * 1. Assert: Type(O) is Object.\n\t * 2. Assert: IsPropertyKey(P) is true.\n\t * 3. Return O.[[Get]](P, O).\n\t */\n\tGet: function Get(O, P) {\n\t\t// 7.3.1.1\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\t// 7.3.1.2\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true, got ' + inspect(P));\n\t\t}\n\t\t// 7.3.1.3\n\t\treturn O[P];\n\t},\n\n\tType: function Type(x) {\n\t\tif (typeof x === 'symbol') {\n\t\t\treturn 'Symbol';\n\t\t}\n\t\treturn ES5.Type(x);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-speciesconstructor\n\tSpeciesConstructor: function SpeciesConstructor(O, defaultConstructor) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\tvar C = O.constructor;\n\t\tif (typeof C === 'undefined') {\n\t\t\treturn defaultConstructor;\n\t\t}\n\t\tif (this.Type(C) !== 'Object') {\n\t\t\tthrow new $TypeError('O.constructor is not an Object');\n\t\t}\n\t\tvar S = hasSymbols && $Symbol.species ? C[$Symbol.species] : void 0;\n\t\tif (S == null) {\n\t\t\treturn defaultConstructor;\n\t\t}\n\t\tif (this.IsConstructor(S)) {\n\t\t\treturn S;\n\t\t}\n\t\tthrow new $TypeError('no constructor found');\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-frompropertydescriptor\n\tFromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn Desc;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tvar obj = {};\n\t\tif ('[[Value]]' in Desc) {\n\t\t\tobj.value = Desc['[[Value]]'];\n\t\t}\n\t\tif ('[[Writable]]' in Desc) {\n\t\t\tobj.writable = Desc['[[Writable]]'];\n\t\t}\n\t\tif ('[[Get]]' in Desc) {\n\t\t\tobj.get = Desc['[[Get]]'];\n\t\t}\n\t\tif ('[[Set]]' in Desc) {\n\t\t\tobj.set = Desc['[[Set]]'];\n\t\t}\n\t\tif ('[[Enumerable]]' in Desc) {\n\t\t\tobj.enumerable = Desc['[[Enumerable]]'];\n\t\t}\n\t\tif ('[[Configurable]]' in Desc) {\n\t\t\tobj.configurable = Desc['[[Configurable]]'];\n\t\t}\n\t\treturn obj;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-completepropertydescriptor\n\tCompletePropertyDescriptor: function CompletePropertyDescriptor(Desc) {\n\t\t/* eslint no-param-reassign: 0 */\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (this.IsGenericDescriptor(Desc) || this.IsDataDescriptor(Desc)) {\n\t\t\tif (!has(Desc, '[[Value]]')) {\n\t\t\t\tDesc['[[Value]]'] = void 0;\n\t\t\t}\n\t\t\tif (!has(Desc, '[[Writable]]')) {\n\t\t\t\tDesc['[[Writable]]'] = false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!has(Desc, '[[Get]]')) {\n\t\t\t\tDesc['[[Get]]'] = void 0;\n\t\t\t}\n\t\t\tif (!has(Desc, '[[Set]]')) {\n\t\t\t\tDesc['[[Set]]'] = void 0;\n\t\t\t}\n\t\t}\n\t\tif (!has(Desc, '[[Enumerable]]')) {\n\t\t\tDesc['[[Enumerable]]'] = false;\n\t\t}\n\t\tif (!has(Desc, '[[Configurable]]')) {\n\t\t\tDesc['[[Configurable]]'] = false;\n\t\t}\n\t\treturn Desc;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-set-o-p-v-throw\n\tSet: function Set(O, P, V, Throw) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('O must be an Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('P must be a Property Key');\n\t\t}\n\t\tif (this.Type(Throw) !== 'Boolean') {\n\t\t\tthrow new $TypeError('Throw must be a Boolean');\n\t\t}\n\t\tif (Throw) {\n\t\t\tO[P] = V;\n\t\t\treturn true;\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tO[P] = V;\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-hasownproperty\n\tHasOwnProperty: function HasOwnProperty(O, P) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('O must be an Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('P must be a Property Key');\n\t\t}\n\t\treturn has(O, P);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-hasproperty\n\tHasProperty: function HasProperty(O, P) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('O must be an Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('P must be a Property Key');\n\t\t}\n\t\treturn P in O;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-isconcatspreadable\n\tIsConcatSpreadable: function IsConcatSpreadable(O) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tif (hasSymbols && typeof $Symbol.isConcatSpreadable === 'symbol') {\n\t\t\tvar spreadable = this.Get(O, Symbol.isConcatSpreadable);\n\t\t\tif (typeof spreadable !== 'undefined') {\n\t\t\t\treturn this.ToBoolean(spreadable);\n\t\t\t}\n\t\t}\n\t\treturn this.IsArray(O);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-invoke\n\tInvoke: function Invoke(O, P) {\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('P must be a Property Key');\n\t\t}\n\t\tvar argumentsList = arraySlice(arguments, 2);\n\t\tvar func = this.GetV(O, P);\n\t\treturn this.Call(func, O, argumentsList);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-getiterator\n\tGetIterator: function GetIterator(obj, method) {\n\t\tvar actualMethod = method;\n\t\tif (arguments.length < 2) {\n\t\t\tactualMethod = getIteratorMethod(this, obj);\n\t\t}\n\t\tvar iterator = this.Call(actualMethod, obj);\n\t\tif (this.Type(iterator) !== 'Object') {\n\t\t\tthrow new $TypeError('iterator must return an object');\n\t\t}\n\n\t\treturn iterator;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-iteratornext\n\tIteratorNext: function IteratorNext(iterator, value) {\n\t\tvar result = this.Invoke(iterator, 'next', arguments.length < 2 ? [] : [value]);\n\t\tif (this.Type(result) !== 'Object') {\n\t\t\tthrow new $TypeError('iterator next must return an object');\n\t\t}\n\t\treturn result;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-iteratorcomplete\n\tIteratorComplete: function IteratorComplete(iterResult) {\n\t\tif (this.Type(iterResult) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(iterResult) is not Object');\n\t\t}\n\t\treturn this.ToBoolean(this.Get(iterResult, 'done'));\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-iteratorvalue\n\tIteratorValue: function IteratorValue(iterResult) {\n\t\tif (this.Type(iterResult) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(iterResult) is not Object');\n\t\t}\n\t\treturn this.Get(iterResult, 'value');\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-iteratorstep\n\tIteratorStep: function IteratorStep(iterator) {\n\t\tvar result = this.IteratorNext(iterator);\n\t\tvar done = this.IteratorComplete(result);\n\t\treturn done === true ? false : result;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-iteratorclose\n\tIteratorClose: function IteratorClose(iterator, completion) {\n\t\tif (this.Type(iterator) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(iterator) is not Object');\n\t\t}\n\t\tif (!this.IsCallable(completion)) {\n\t\t\tthrow new $TypeError('Assertion failed: completion is not a thunk for a Completion Record');\n\t\t}\n\t\tvar completionThunk = completion;\n\n\t\tvar iteratorReturn = this.GetMethod(iterator, 'return');\n\n\t\tif (typeof iteratorReturn === 'undefined') {\n\t\t\treturn completionThunk();\n\t\t}\n\n\t\tvar completionRecord;\n\t\ttry {\n\t\t\tvar innerResult = this.Call(iteratorReturn, iterator, []);\n\t\t} catch (e) {\n\t\t\t// if we hit here, then \"e\" is the innerResult completion that needs re-throwing\n\n\t\t\t// if the completion is of type \"throw\", this will throw.\n\t\t\tcompletionRecord = completionThunk();\n\t\t\tcompletionThunk = null; // ensure it's not called twice.\n\n\t\t\t// if not, then return the innerResult completion\n\t\t\tthrow e;\n\t\t}\n\t\tcompletionRecord = completionThunk(); // if innerResult worked, then throw if the completion does\n\t\tcompletionThunk = null; // ensure it's not called twice.\n\n\t\tif (this.Type(innerResult) !== 'Object') {\n\t\t\tthrow new $TypeError('iterator .return must return an object');\n\t\t}\n\n\t\treturn completionRecord;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-createiterresultobject\n\tCreateIterResultObject: function CreateIterResultObject(value, done) {\n\t\tif (this.Type(done) !== 'Boolean') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(done) is not Boolean');\n\t\t}\n\t\treturn {\n\t\t\tvalue: value,\n\t\t\tdone: done\n\t\t};\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-regexpexec\n\tRegExpExec: function RegExpExec(R, S) {\n\t\tif (this.Type(R) !== 'Object') {\n\t\t\tthrow new $TypeError('R must be an Object');\n\t\t}\n\t\tif (this.Type(S) !== 'String') {\n\t\t\tthrow new $TypeError('S must be a String');\n\t\t}\n\t\tvar exec = this.Get(R, 'exec');\n\t\tif (this.IsCallable(exec)) {\n\t\t\tvar result = this.Call(exec, R, [S]);\n\t\t\tif (result === null || this.Type(result) === 'Object') {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tthrow new $TypeError('\"exec\" method must return `null` or an Object');\n\t\t}\n\t\treturn regexExec(R, S);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-arrayspeciescreate\n\tArraySpeciesCreate: function ArraySpeciesCreate(originalArray, length) {\n\t\tif (!this.IsInteger(length) || length < 0) {\n\t\t\tthrow new $TypeError('Assertion failed: length must be an integer >= 0');\n\t\t}\n\t\tvar len = length === 0 ? 0 : length;\n\t\tvar C;\n\t\tvar isArray = this.IsArray(originalArray);\n\t\tif (isArray) {\n\t\t\tC = this.Get(originalArray, 'constructor');\n\t\t\t// TODO: figure out how to make a cross-realm normal Array, a same-realm Array\n\t\t\t// if (this.IsConstructor(C)) {\n\t\t\t// \tif C is another realm's Array, C = undefined\n\t\t\t// \tObject.getPrototypeOf(Object.getPrototypeOf(Object.getPrototypeOf(Array))) === null ?\n\t\t\t// }\n\t\t\tif (this.Type(C) === 'Object' && hasSymbols && $Symbol.species) {\n\t\t\t\tC = this.Get(C, $Symbol.species);\n\t\t\t\tif (C === null) {\n\t\t\t\t\tC = void 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (typeof C === 'undefined') {\n\t\t\treturn $Array(len);\n\t\t}\n\t\tif (!this.IsConstructor(C)) {\n\t\t\tthrow new $TypeError('C must be a constructor');\n\t\t}\n\t\treturn new C(len); // this.Construct(C, len);\n\t},\n\n\tCreateDataProperty: function CreateDataProperty(O, P, V) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\t\tvar oldDesc = $gOPD(O, P);\n\t\tvar extensible = oldDesc || this.IsExtensible(O);\n\t\tvar immutable = oldDesc && (!oldDesc.writable || !oldDesc.configurable);\n\t\tif (immutable || !extensible) {\n\t\t\treturn false;\n\t\t}\n\t\treturn DefineOwnProperty(this, O, P, {\n\t\t\t'[[Configurable]]': true,\n\t\t\t'[[Enumerable]]': true,\n\t\t\t'[[Value]]': V,\n\t\t\t'[[Writable]]': true\n\t\t});\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-createdatapropertyorthrow\n\tCreateDataPropertyOrThrow: function CreateDataPropertyOrThrow(O, P, V) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\t\tvar success = this.CreateDataProperty(O, P, V);\n\t\tif (!success) {\n\t\t\tthrow new $TypeError('unable to create data property');\n\t\t}\n\t\treturn success;\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-objectcreate\n\tObjectCreate: function ObjectCreate(proto, internalSlotsList) {\n\t\tif (proto !== null && this.Type(proto) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: proto must be null or an object');\n\t\t}\n\t\tvar slots = arguments.length < 2 ? [] : internalSlotsList;\n\t\tif (slots.length > 0) {\n\t\t\tthrow new $SyntaxError('es-abstract does not yet support internal slots');\n\t\t}\n\n\t\tif (proto === null && !$ObjectCreate) {\n\t\t\tthrow new $SyntaxError('native Object.create support is required to create null objects');\n\t\t}\n\n\t\treturn $ObjectCreate(proto);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-advancestringindex\n\tAdvanceStringIndex: function AdvanceStringIndex(S, index, unicode) {\n\t\tif (this.Type(S) !== 'String') {\n\t\t\tthrow new $TypeError('S must be a String');\n\t\t}\n\t\tif (!this.IsInteger(index) || index < 0 || index > MAX_SAFE_INTEGER) {\n\t\t\tthrow new $TypeError('Assertion failed: length must be an integer >= 0 and <= 2**53');\n\t\t}\n\t\tif (this.Type(unicode) !== 'Boolean') {\n\t\t\tthrow new $TypeError('Assertion failed: unicode must be a Boolean');\n\t\t}\n\t\tif (!unicode) {\n\t\t\treturn index + 1;\n\t\t}\n\t\tvar length = S.length;\n\t\tif ((index + 1) >= length) {\n\t\t\treturn index + 1;\n\t\t}\n\n\t\tvar first = $charCodeAt(S, index);\n\t\tif (first < 0xD800 || first > 0xDBFF) {\n\t\t\treturn index + 1;\n\t\t}\n\n\t\tvar second = $charCodeAt(S, index + 1);\n\t\tif (second < 0xDC00 || second > 0xDFFF) {\n\t\t\treturn index + 1;\n\t\t}\n\n\t\treturn index + 2;\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-createmethodproperty\n\tCreateMethodProperty: function CreateMethodProperty(O, P, V) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\n\t\tvar newDesc = {\n\t\t\t'[[Configurable]]': true,\n\t\t\t'[[Enumerable]]': false,\n\t\t\t'[[Value]]': V,\n\t\t\t'[[Writable]]': true\n\t\t};\n\t\treturn DefineOwnProperty(this, O, P, newDesc);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-definepropertyorthrow\n\tDefinePropertyOrThrow: function DefinePropertyOrThrow(O, P, desc) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\n\t\tvar Desc = isPropertyDescriptor(this, desc) ? desc : this.ToPropertyDescriptor(desc);\n\t\tif (!isPropertyDescriptor(this, Desc)) {\n\t\t\tthrow new $TypeError('Assertion failed: Desc is not a valid Property Descriptor');\n\t\t}\n\n\t\treturn DefineOwnProperty(this, O, P, Desc);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-deletepropertyorthrow\n\tDeletePropertyOrThrow: function DeletePropertyOrThrow(O, P) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\n\t\tvar success = delete O[P];\n\t\tif (!success) {\n\t\t\tthrow new TypeError('Attempt to delete property failed.');\n\t\t}\n\t\treturn success;\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-enumerableownnames\n\tEnumerableOwnNames: function EnumerableOwnNames(O) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\n\t\treturn keys(O);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-number-prototype-object\n\tthisNumberValue: function thisNumberValue(value) {\n\t\tif (this.Type(value) === 'Number') {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn $NumberValueOf(value);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-boolean-prototype-object\n\tthisBooleanValue: function thisBooleanValue(value) {\n\t\tif (this.Type(value) === 'Boolean') {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn $BooleanValueOf(value);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-string-prototype-object\n\tthisStringValue: function thisStringValue(value) {\n\t\tif (this.Type(value) === 'String') {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn $StringValueOf(value);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-date-prototype-object\n\tthisTimeValue: function thisTimeValue(value) {\n\t\treturn $DateValueOf(value);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-setintegritylevel\n\tSetIntegrityLevel: function SetIntegrityLevel(O, level) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\tif (level !== 'sealed' && level !== 'frozen') {\n\t\t\tthrow new $TypeError('Assertion failed: `level` must be `\"sealed\"` or `\"frozen\"`');\n\t\t}\n\t\tif (!$preventExtensions) {\n\t\t\tthrow new $SyntaxError('SetIntegrityLevel requires native `Object.preventExtensions` support');\n\t\t}\n\t\tvar status = $preventExtensions(O);\n\t\tif (!status) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!$gOPN) {\n\t\t\tthrow new $SyntaxError('SetIntegrityLevel requires native `Object.getOwnPropertyNames` support');\n\t\t}\n\t\tvar theKeys = $gOPN(O);\n\t\tvar ES = this;\n\t\tif (level === 'sealed') {\n\t\t\tforEach(theKeys, function (k) {\n\t\t\t\tES.DefinePropertyOrThrow(O, k, { configurable: false });\n\t\t\t});\n\t\t} else if (level === 'frozen') {\n\t\t\tforEach(theKeys, function (k) {\n\t\t\t\tvar currentDesc = $gOPD(O, k);\n\t\t\t\tif (typeof currentDesc !== 'undefined') {\n\t\t\t\t\tvar desc;\n\t\t\t\t\tif (ES.IsAccessorDescriptor(ES.ToPropertyDescriptor(currentDesc))) {\n\t\t\t\t\t\tdesc = { configurable: false };\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdesc = { configurable: false, writable: false };\n\t\t\t\t\t}\n\t\t\t\t\tES.DefinePropertyOrThrow(O, k, desc);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn true;\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-testintegritylevel\n\tTestIntegrityLevel: function TestIntegrityLevel(O, level) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\tif (level !== 'sealed' && level !== 'frozen') {\n\t\t\tthrow new $TypeError('Assertion failed: `level` must be `\"sealed\"` or `\"frozen\"`');\n\t\t}\n\t\tvar status = this.IsExtensible(O);\n\t\tif (status) {\n\t\t\treturn false;\n\t\t}\n\t\tvar theKeys = $gOPN(O);\n\t\tvar ES = this;\n\t\treturn theKeys.length === 0 || every(theKeys, function (k) {\n\t\t\tvar currentDesc = $gOPD(O, k);\n\t\t\tif (typeof currentDesc !== 'undefined') {\n\t\t\t\tif (currentDesc.configurable) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (level === 'frozen' && ES.IsDataDescriptor(ES.ToPropertyDescriptor(currentDesc)) && currentDesc.writable) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-ordinaryhasinstance\n\tOrdinaryHasInstance: function OrdinaryHasInstance(C, O) {\n\t\tif (this.IsCallable(C) === false) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tvar P = this.Get(C, 'prototype');\n\t\tif (this.Type(P) !== 'Object') {\n\t\t\tthrow new $TypeError('OrdinaryHasInstance called on an object with an invalid prototype property.');\n\t\t}\n\t\treturn O instanceof C;\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-ordinaryhasproperty\n\tOrdinaryHasProperty: function OrdinaryHasProperty(O, P) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: P must be a Property Key');\n\t\t}\n\t\treturn P in O;\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-instanceofoperator\n\tInstanceofOperator: function InstanceofOperator(O, C) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\tvar instOfHandler = hasSymbols && $Symbol.hasInstance ? this.GetMethod(C, $Symbol.hasInstance) : void 0;\n\t\tif (typeof instOfHandler !== 'undefined') {\n\t\t\treturn this.ToBoolean(this.Call(instOfHandler, C, [O]));\n\t\t}\n\t\tif (!this.IsCallable(C)) {\n\t\t\tthrow new $TypeError('`C` is not Callable');\n\t\t}\n\t\treturn this.OrdinaryHasInstance(C, O);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-ispromise\n\tIsPromise: function IsPromise(x) {\n\t\tif (this.Type(x) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tif (!$PromiseThen) { // Promises are not supported\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\t$PromiseThen(x); // throws if not a promise\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-abstract-equality-comparison\n\t'Abstract Equality Comparison': function AbstractEqualityComparison(x, y) {\n\t\tvar xType = this.Type(x);\n\t\tvar yType = this.Type(y);\n\t\tif (xType === yType) {\n\t\t\treturn x === y; // ES6+ specified this shortcut anyways.\n\t\t}\n\t\tif (x == null && y == null) {\n\t\t\treturn true;\n\t\t}\n\t\tif (xType === 'Number' && yType === 'String') {\n\t\t\treturn this['Abstract Equality Comparison'](x, this.ToNumber(y));\n\t\t}\n\t\tif (xType === 'String' && yType === 'Number') {\n\t\t\treturn this['Abstract Equality Comparison'](this.ToNumber(x), y);\n\t\t}\n\t\tif (xType === 'Boolean') {\n\t\t\treturn this['Abstract Equality Comparison'](this.ToNumber(x), y);\n\t\t}\n\t\tif (yType === 'Boolean') {\n\t\t\treturn this['Abstract Equality Comparison'](x, this.ToNumber(y));\n\t\t}\n\t\tif ((xType === 'String' || xType === 'Number' || xType === 'Symbol') && yType === 'Object') {\n\t\t\treturn this['Abstract Equality Comparison'](x, this.ToPrimitive(y));\n\t\t}\n\t\tif (xType === 'Object' && (yType === 'String' || yType === 'Number' || yType === 'Symbol')) {\n\t\t\treturn this['Abstract Equality Comparison'](this.ToPrimitive(x), y);\n\t\t}\n\t\treturn false;\n\t},\n\n\t// eslint-disable-next-line max-lines-per-function, max-statements, id-length, max-params\n\tValidateAndApplyPropertyDescriptor: function ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current) {\n\t\t// this uses the ES2017+ logic, since it fixes a number of bugs in the ES2015 logic.\n\t\tvar oType = this.Type(O);\n\t\tif (oType !== 'Undefined' && oType !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: O must be undefined or an Object');\n\t\t}\n\t\tif (this.Type(extensible) !== 'Boolean') {\n\t\t\tthrow new $TypeError('Assertion failed: extensible must be a Boolean');\n\t\t}\n\t\tif (!isPropertyDescriptor(this, Desc)) {\n\t\t\tthrow new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n\t\t}\n\t\tif (this.Type(current) !== 'Undefined' && !isPropertyDescriptor(this, current)) {\n\t\t\tthrow new $TypeError('Assertion failed: current must be a Property Descriptor, or undefined');\n\t\t}\n\t\tif (oType !== 'Undefined' && !this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: if O is not undefined, P must be a Property Key');\n\t\t}\n\t\tif (this.Type(current) === 'Undefined') {\n\t\t\tif (!extensible) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.IsGenericDescriptor(Desc) || this.IsDataDescriptor(Desc)) {\n\t\t\t\tif (oType !== 'Undefined') {\n\t\t\t\t\tDefineOwnProperty(this, O, P, {\n\t\t\t\t\t\t'[[Configurable]]': Desc['[[Configurable]]'],\n\t\t\t\t\t\t'[[Enumerable]]': Desc['[[Enumerable]]'],\n\t\t\t\t\t\t'[[Value]]': Desc['[[Value]]'],\n\t\t\t\t\t\t'[[Writable]]': Desc['[[Writable]]']\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!this.IsAccessorDescriptor(Desc)) {\n\t\t\t\t\tthrow new $TypeError('Assertion failed: Desc is not an accessor descriptor');\n\t\t\t\t}\n\t\t\t\tif (oType !== 'Undefined') {\n\t\t\t\t\treturn DefineOwnProperty(this, O, P, Desc);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tif (this.IsGenericDescriptor(Desc) && !('[[Configurable]]' in Desc) && !('[[Enumerable]]' in Desc)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (isSamePropertyDescriptor(this, Desc, current)) {\n\t\t\treturn true; // removed by ES2017, but should still be correct\n\t\t}\n\t\t// \"if every field in Desc is absent, return true\" can't really match the assertion that it's a Property Descriptor\n\t\tif (!current['[[Configurable]]']) {\n\t\t\tif (Desc['[[Configurable]]']) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ('[[Enumerable]]' in Desc && !Desc['[[Enumerable]]'] === !!current['[[Enumerable]]']) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (this.IsGenericDescriptor(Desc)) {\n\t\t\t// no further validation is required.\n\t\t} else if (this.IsDataDescriptor(current) !== this.IsDataDescriptor(Desc)) {\n\t\t\tif (!current['[[Configurable]]']) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.IsDataDescriptor(current)) {\n\t\t\t\tif (oType !== 'Undefined') {\n\t\t\t\t\tDefineOwnProperty(this, O, P, {\n\t\t\t\t\t\t'[[Configurable]]': current['[[Configurable]]'],\n\t\t\t\t\t\t'[[Enumerable]]': current['[[Enumerable]]'],\n\t\t\t\t\t\t'[[Get]]': undefined\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (oType !== 'Undefined') {\n\t\t\t\tDefineOwnProperty(this, O, P, {\n\t\t\t\t\t'[[Configurable]]': current['[[Configurable]]'],\n\t\t\t\t\t'[[Enumerable]]': current['[[Enumerable]]'],\n\t\t\t\t\t'[[Value]]': undefined\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (this.IsDataDescriptor(current) && this.IsDataDescriptor(Desc)) {\n\t\t\tif (!current['[[Configurable]]'] && !current['[[Writable]]']) {\n\t\t\t\tif ('[[Writable]]' in Desc && Desc['[[Writable]]']) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif ('[[Value]]' in Desc && !this.SameValue(Desc['[[Value]]'], current['[[Value]]'])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (this.IsAccessorDescriptor(current) && this.IsAccessorDescriptor(Desc)) {\n\t\t\tif (!current['[[Configurable]]']) {\n\t\t\t\tif ('[[Set]]' in Desc && !this.SameValue(Desc['[[Set]]'], current['[[Set]]'])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif ('[[Get]]' in Desc && !this.SameValue(Desc['[[Get]]'], current['[[Get]]'])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new $TypeError('Assertion failed: current and Desc are not both data, both accessors, or one accessor and one data.');\n\t\t}\n\t\tif (oType !== 'Undefined') {\n\t\t\treturn DefineOwnProperty(this, O, P, Desc);\n\t\t}\n\t\treturn true;\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-ordinarydefineownproperty\n\tOrdinaryDefineOwnProperty: function OrdinaryDefineOwnProperty(O, P, Desc) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: O must be an Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: P must be a Property Key');\n\t\t}\n\t\tif (!isPropertyDescriptor(this, Desc)) {\n\t\t\tthrow new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n\t\t}\n\t\tvar desc = $gOPD(O, P);\n\t\tvar current = desc && this.ToPropertyDescriptor(desc);\n\t\tvar extensible = this.IsExtensible(O);\n\t\treturn this.ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-ordinarygetownproperty\n\tOrdinaryGetOwnProperty: function OrdinaryGetOwnProperty(O, P) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: O must be an Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: P must be a Property Key');\n\t\t}\n\t\tif (!has(O, P)) {\n\t\t\treturn void 0;\n\t\t}\n\t\tif (!$gOPD) {\n\t\t\t// ES3 fallback\n\t\t\tvar arrayLength = this.IsArray(O) && P === 'length';\n\t\t\tvar regexLastIndex = this.IsRegExp(O) && P === 'lastIndex';\n\t\t\treturn {\n\t\t\t\t'[[Configurable]]': !(arrayLength || regexLastIndex),\n\t\t\t\t'[[Enumerable]]': $isEnumerable(O, P),\n\t\t\t\t'[[Value]]': O[P],\n\t\t\t\t'[[Writable]]': true\n\t\t\t};\n\t\t}\n\t\treturn this.ToPropertyDescriptor($gOPD(O, P));\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-arraycreate\n\tArrayCreate: function ArrayCreate(length) {\n\t\tif (!this.IsInteger(length) || length < 0) {\n\t\t\tthrow new $TypeError('Assertion failed: `length` must be an integer Number >= 0');\n\t\t}\n\t\tif (length > MAX_ARRAY_LENGTH) {\n\t\t\tthrow new $RangeError('length is greater than (2**32 - 1)');\n\t\t}\n\t\tvar proto = arguments.length > 1 ? arguments[1] : $ArrayPrototype;\n\t\tvar A = []; // steps 5 - 7, and 9\n\t\tif (proto !== $ArrayPrototype) { // step 8\n\t\t\tif (!$setProto) {\n\t\t\t\tthrow new $SyntaxError('ArrayCreate: a `proto` argument that is not `Array.prototype` is not supported in an environment that does not support setting the [[Prototype]]');\n\t\t\t}\n\t\t\t$setProto(A, proto);\n\t\t}\n\t\tif (length !== 0) { // bypasses the need for step 2\n\t\t\tA.length = length;\n\t\t}\n\t\t/* step 10, the above as a shortcut for the below\n\t\tthis.OrdinaryDefineOwnProperty(A, 'length', {\n\t\t\t'[[Configurable]]': false,\n\t\t\t'[[Enumerable]]': false,\n\t\t\t'[[Value]]': length,\n\t\t\t'[[Writable]]': true\n\t\t});\n\t\t*/\n\t\treturn A;\n\t},\n\n\t// eslint-disable-next-line max-statements, max-lines-per-function\n\tArraySetLength: function ArraySetLength(A, Desc) {\n\t\tif (!this.IsArray(A)) {\n\t\t\tthrow new $TypeError('Assertion failed: A must be an Array');\n\t\t}\n\t\tif (!isPropertyDescriptor(this, Desc)) {\n\t\t\tthrow new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n\t\t}\n\t\tif (!('[[Value]]' in Desc)) {\n\t\t\treturn this.OrdinaryDefineOwnProperty(A, 'length', Desc);\n\t\t}\n\t\tvar newLenDesc = assign({}, Desc);\n\t\tvar newLen = this.ToUint32(Desc['[[Value]]']);\n\t\tvar numberLen = this.ToNumber(Desc['[[Value]]']);\n\t\tif (newLen !== numberLen) {\n\t\t\tthrow new $RangeError('Invalid array length');\n\t\t}\n\t\tnewLenDesc['[[Value]]'] = newLen;\n\t\tvar oldLenDesc = this.OrdinaryGetOwnProperty(A, 'length');\n\t\tif (!this.IsDataDescriptor(oldLenDesc)) {\n\t\t\tthrow new $TypeError('Assertion failed: an array had a non-data descriptor on `length`');\n\t\t}\n\t\tvar oldLen = oldLenDesc['[[Value]]'];\n\t\tif (newLen >= oldLen) {\n\t\t\treturn this.OrdinaryDefineOwnProperty(A, 'length', newLenDesc);\n\t\t}\n\t\tif (!oldLenDesc['[[Writable]]']) {\n\t\t\treturn false;\n\t\t}\n\t\tvar newWritable;\n\t\tif (!('[[Writable]]' in newLenDesc) || newLenDesc['[[Writable]]']) {\n\t\t\tnewWritable = true;\n\t\t} else {\n\t\t\tnewWritable = false;\n\t\t\tnewLenDesc['[[Writable]]'] = true;\n\t\t}\n\t\tvar succeeded = this.OrdinaryDefineOwnProperty(A, 'length', newLenDesc);\n\t\tif (!succeeded) {\n\t\t\treturn false;\n\t\t}\n\t\twhile (newLen < oldLen) {\n\t\t\toldLen -= 1;\n\t\t\tvar deleteSucceeded = delete A[this.ToString(oldLen)];\n\t\t\tif (!deleteSucceeded) {\n\t\t\t\tnewLenDesc['[[Value]]'] = oldLen + 1;\n\t\t\t\tif (!newWritable) {\n\t\t\t\t\tnewLenDesc['[[Writable]]'] = false;\n\t\t\t\t\tthis.OrdinaryDefineOwnProperty(A, 'length', newLenDesc);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!newWritable) {\n\t\t\treturn this.OrdinaryDefineOwnProperty(A, 'length', { '[[Writable]]': false });\n\t\t}\n\t\treturn true;\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-createhtml\n\tCreateHTML: function CreateHTML(string, tag, attribute, value) {\n\t\tif (this.Type(tag) !== 'String' || this.Type(attribute) !== 'String') {\n\t\t\tthrow new $TypeError('Assertion failed: `tag` and `attribute` must be strings');\n\t\t}\n\t\tvar str = this.RequireObjectCoercible(string);\n\t\tvar S = this.ToString(str);\n\t\tvar p1 = '<' + tag;\n\t\tif (attribute !== '') {\n\t\t\tvar V = this.ToString(value);\n\t\t\tvar escapedV = $replace(V, /\\x22/g, '&quot;');\n\t\t\tp1 += '\\x20' + attribute + '\\x3D\\x22' + escapedV + '\\x22';\n\t\t}\n\t\treturn p1 + '>' + S + '</' + tag + '>';\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-getownpropertykeys\n\tGetOwnPropertyKeys: function GetOwnPropertyKeys(O, Type) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\tif (Type === 'Symbol') {\n\t\t\treturn hasSymbols && $gOPS ? $gOPS(O) : [];\n\t\t}\n\t\tif (Type === 'String') {\n\t\t\tif (!$gOPN) {\n\t\t\t\treturn keys(O);\n\t\t\t}\n\t\t\treturn $gOPN(O);\n\t\t}\n\t\tthrow new $TypeError('Assertion failed: `Type` must be `\"String\"` or `\"Symbol\"`');\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-symboldescriptivestring\n\tSymbolDescriptiveString: function SymbolDescriptiveString(sym) {\n\t\tif (this.Type(sym) !== 'Symbol') {\n\t\t\tthrow new $TypeError('Assertion failed: `sym` must be a Symbol');\n\t\t}\n\t\treturn $SymbolToString(sym);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-getsubstitution\n\t// eslint-disable-next-line max-statements, max-params, max-lines-per-function\n\tGetSubstitution: function GetSubstitution(matched, str, position, captures, replacement) {\n\t\tif (this.Type(matched) !== 'String') {\n\t\t\tthrow new $TypeError('Assertion failed: `matched` must be a String');\n\t\t}\n\t\tvar matchLength = matched.length;\n\n\t\tif (this.Type(str) !== 'String') {\n\t\t\tthrow new $TypeError('Assertion failed: `str` must be a String');\n\t\t}\n\t\tvar stringLength = str.length;\n\n\t\tif (!this.IsInteger(position) || position < 0 || position > stringLength) {\n\t\t\tthrow new $TypeError('Assertion failed: `position` must be a nonnegative integer, and less than or equal to the length of `string`, got ' + inspect(position));\n\t\t}\n\n\t\tvar ES = this;\n\t\tvar isStringOrHole = function (capture, index, arr) { return ES.Type(capture) === 'String' || !(index in arr); };\n\t\tif (!this.IsArray(captures) || !every(captures, isStringOrHole)) {\n\t\t\tthrow new $TypeError('Assertion failed: `captures` must be a List of Strings, got ' + inspect(captures));\n\t\t}\n\n\t\tif (this.Type(replacement) !== 'String') {\n\t\t\tthrow new $TypeError('Assertion failed: `replacement` must be a String');\n\t\t}\n\n\t\tvar tailPos = position + matchLength;\n\t\tvar m = captures.length;\n\n\t\tvar result = '';\n\t\tfor (var i = 0; i < replacement.length; i += 1) {\n\t\t\t// if this is a $, and it's not the end of the replacement\n\t\t\tvar current = replacement[i];\n\t\t\tvar isLast = (i + 1) >= replacement.length;\n\t\t\tvar nextIsLast = (i + 2) >= replacement.length;\n\t\t\tif (current === '$' && !isLast) {\n\t\t\t\tvar next = replacement[i + 1];\n\t\t\t\tif (next === '$') {\n\t\t\t\t\tresult += '$';\n\t\t\t\t\ti += 1;\n\t\t\t\t} else if (next === '&') {\n\t\t\t\t\tresult += matched;\n\t\t\t\t\ti += 1;\n\t\t\t\t} else if (next === '`') {\n\t\t\t\t\tresult += position === 0 ? '' : strSlice(str, 0, position - 1);\n\t\t\t\t\ti += 1;\n\t\t\t\t} else if (next === \"'\") {\n\t\t\t\t\tresult += tailPos >= stringLength ? '' : strSlice(str, tailPos);\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tvar nextNext = nextIsLast ? null : replacement[i + 2];\n\t\t\t\t\tif (isDigit(next) && next !== '0' && (nextIsLast || !isDigit(nextNext))) {\n\t\t\t\t\t\t// $1 through $9, and not followed by a digit\n\t\t\t\t\t\tvar n = parseInteger(next, 10);\n\t\t\t\t\t\t// if (n > m, impl-defined)\n\t\t\t\t\t\tresult += (n <= m && this.Type(captures[n - 1]) === 'Undefined') ? '' : captures[n - 1];\n\t\t\t\t\t\ti += 1;\n\t\t\t\t\t} else if (isDigit(next) && (nextIsLast || isDigit(nextNext))) {\n\t\t\t\t\t\t// $00 through $99\n\t\t\t\t\t\tvar nn = next + nextNext;\n\t\t\t\t\t\tvar nnI = parseInteger(nn, 10) - 1;\n\t\t\t\t\t\t// if nn === '00' or nn > m, impl-defined\n\t\t\t\t\t\tresult += (nn <= m && this.Type(captures[nnI]) === 'Undefined') ? '' : captures[nnI];\n\t\t\t\t\t\ti += 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult += '$';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// the final $, or else not a $\n\t\t\t\tresult += replacement[i];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-todatestring\n\tToDateString: function ToDateString(tv) {\n\t\tif (this.Type(tv) !== 'Number') {\n\t\t\tthrow new $TypeError('Assertion failed: `tv` must be a Number');\n\t\t}\n\t\tif ($isNaN(tv)) {\n\t\t\treturn 'Invalid Date';\n\t\t}\n\t\treturn $Date(tv);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-createlistfromarraylike\n\tCreateListFromArrayLike: function CreateListFromArrayLike(obj) {\n\t\tvar elementTypes = arguments.length > 1\n\t\t\t? arguments[1]\n\t\t\t: ['Undefined', 'Null', 'Boolean', 'String', 'Symbol', 'Number', 'Object'];\n\n\t\tif (this.Type(obj) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: `obj` must be an Object');\n\t\t}\n\t\tif (!this.IsArray(elementTypes)) {\n\t\t\tthrow new $TypeError('Assertion failed: `elementTypes`, if provided, must be an array');\n\t\t}\n\t\tvar len = this.ToLength(this.Get(obj, 'length'));\n\t\tvar list = [];\n\t\tvar index = 0;\n\t\twhile (index < len) {\n\t\t\tvar indexName = this.ToString(index);\n\t\t\tvar next = this.Get(obj, indexName);\n\t\t\tvar nextType = this.Type(next);\n\t\t\tif ($indexOf(elementTypes, nextType) < 0) {\n\t\t\t\tthrow new $TypeError('item type ' + nextType + ' is not a valid elementType');\n\t\t\t}\n\t\t\t$push(list, next);\n\t\t\tindex += 1;\n\t\t}\n\t\treturn list;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-getprototypefromconstructor\n\tGetPrototypeFromConstructor: function GetPrototypeFromConstructor(constructor, intrinsicDefaultProto) {\n\t\tvar intrinsic = GetIntrinsic(intrinsicDefaultProto); // throws if not a valid intrinsic\n\t\tif (!this.IsConstructor(constructor)) {\n\t\t\tthrow new $TypeError('Assertion failed: `constructor` must be a constructor');\n\t\t}\n\t\tvar proto = this.Get(constructor, 'prototype');\n\t\tif (this.Type(proto) !== 'Object') {\n\t\t\tif (!(constructor instanceof $Function)) {\n\t\t\t\t// ignore other realms, for now\n\t\t\t\tthrow new $TypeError('cross-realm constructors not currently supported');\n\t\t\t}\n\t\t\tproto = intrinsic;\n\t\t}\n\t\treturn proto;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-setfunctionname\n\tSetFunctionName: function SetFunctionName(F, name) {\n\t\tif (typeof F !== 'function') {\n\t\t\tthrow new $TypeError('Assertion failed: `F` must be a function');\n\t\t}\n\t\tif (!this.IsExtensible(F) || has(F, 'name')) {\n\t\t\tthrow new $TypeError('Assertion failed: `F` must be extensible, and must not have a `name` own property');\n\t\t}\n\t\tvar nameType = this.Type(name);\n\t\tif (nameType !== 'Symbol' && nameType !== 'String') {\n\t\t\tthrow new $TypeError('Assertion failed: `name` must be a Symbol or a String');\n\t\t}\n\t\tif (nameType === 'Symbol') {\n\t\t\tvar description = getSymbolDescription(name);\n\t\t\tname = typeof description === 'undefined' ? '' : '[' + description + ']';\n\t\t}\n\t\tif (arguments.length > 2) {\n\t\t\tvar prefix = arguments[2];\n\t\t\tname = prefix + ' ' + name;\n\t\t}\n\t\treturn this.DefinePropertyOrThrow(F, 'name', {\n\t\t\t'[[Value]]': name,\n\t\t\t'[[Writable]]': false,\n\t\t\t'[[Enumerable]]': false,\n\t\t\t'[[Configurable]]': true\n\t\t});\n\t}\n});\n\ndelete ES6.CheckObjectCoercible; // renamed in ES6 to RequireObjectCoercible\n\nmodule.exports = ES6;\n"]},"metadata":{},"sourceType":"script"}