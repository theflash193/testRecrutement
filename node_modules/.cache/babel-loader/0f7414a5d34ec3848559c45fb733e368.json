{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gordon\\\\Desktop\\\\jojo\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'; // let store = createStore();\n\nconst increment = () => {\n  return {\n    type: 'INCREMENT'\n  };\n};\n\nconst counter = (state = 0, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return state + 1;\n\n    default:\n      return state;\n  }\n};\n\nlet store = createStore(counter, window.__REDUX_DEVTOOLS__ && window.R);\nstore.subscribe(() => console.log(store.getState()));\nstore.dispatch(increment());\nstore.dispatch(increment());\nstore.dispatch(increment());\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/gordon/Desktop/jojo/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","increment","type","counter","state","action","store","window","__REDUX_DEVTOOLS__","R","subscribe","console","log","getState","dispatch","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAAQC,WAAR,QAA0B,OAA1B,C,CAEA;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,SAAO;AACHC,IAAAA,IAAI,EAAE;AADH,GAAP;AAGF,CAJF;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AACnC,UAAQA,MAAM,CAACH,IAAf;AACK,SAAK,WAAL;AACI,aAAOE,KAAK,GAAG,CAAf;;AAEL;AACI,aAAOA,KAAP;AALR;AAOH,CARD;;AAUA,IAAIE,KAAK,GAAGN,WAAW,CACnBG,OADmB,EAEnBI,MAAM,CAACC,kBAAP,IAA6BD,MAAM,CAACE,CAFjB,CAAvB;AAIAH,KAAK,CAACI,SAAN,CAAgB,MAAMC,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,QAAN,EAAZ,CAAtB;AAEAP,KAAK,CAACQ,QAAN,CAAeb,SAAS,EAAxB;AACAK,KAAK,CAACQ,QAAN,CAAeb,SAAS,EAAxB;AACAK,KAAK,CAACQ,QAAN,CAAeb,SAAS,EAAxB;AAEAJ,QAAQ,CAACkB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAlB,aAAa,CAACmB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\n\n// let store = createStore();\n\nconst increment = () => { \n    return { \n        type: 'INCREMENT'\n     }\n };\n\nconst counter = (state = 0, action) => { \n    switch (action.type) {\n         case \"INCREMENT\":\n             return state + 1;\n\n        default:\n            return state;\n    }\n}\n\nlet store = createStore(\n    counter,\n    window.__REDUX_DEVTOOLS__ && window.R );\n\nstore.subscribe(() => console.log(store.getState()));\n\nstore.dispatch(increment());\nstore.dispatch(increment());\nstore.dispatch(increment());\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}