{"ast":null,"code":"'use strict';\n\nvar ES = require('es-abstract/es2019');\n\nvar adder = function addDataProperty(key, value) {\n  var O = this; // eslint-disable-line no-invalid-this\n\n  var propertyKey = ES.ToPropertyKey(key);\n  ES.CreateDataPropertyOrThrow(O, propertyKey, value);\n};\n\nvar legacyAssign = function assign(obj, entries) {\n  for (var i = 0; i < entries.length; ++i) {\n    var entry = entries[i];\n\n    if (ES.Type(entry) !== 'Object') {\n      throw new TypeError('iterator returned a non-object; entry expected');\n    }\n\n    var key = ES.Get(entry, '0');\n    var value = ES.Get(entry, '1');\n    var propertyKey = ES.ToPropertyKey(key);\n    ES.CreateDataPropertyOrThrow(obj, propertyKey, value);\n  }\n};\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nmodule.exports = function fromEntries(iterable) {\n  ES.RequireObjectCoercible(iterable);\n  var obj = {}; // this part isn't in the spec, it's for a reasonable fallback for pre-ES6 environments\n\n  if (!hasSymbols) {\n    if (!ES.IsArray(iterable)) {\n      throw new TypeError('this environment lacks native Symbols, and can not support non-Array iterables');\n    }\n\n    legacyAssign(obj, iterable);\n    return obj;\n  }\n\n  return ES.AddEntriesFromIterable(obj, iterable, adder);\n};","map":{"version":3,"sources":["C:/Users/gordon/Desktop/testRecrutement/node_modules/object.fromentries/implementation.js"],"names":["ES","require","adder","addDataProperty","key","value","O","propertyKey","ToPropertyKey","CreateDataPropertyOrThrow","legacyAssign","assign","obj","entries","i","length","entry","Type","TypeError","Get","hasSymbols","Symbol","module","exports","fromEntries","iterable","RequireObjectCoercible","IsArray","AddEntriesFromIterable"],"mappings":"AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,oBAAD,CAAhB;;AAEA,IAAIC,KAAK,GAAG,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,KAA9B,EAAqC;AAChD,MAAIC,CAAC,GAAG,IAAR,CADgD,CAClC;;AACd,MAAIC,WAAW,GAAGP,EAAE,CAACQ,aAAH,CAAiBJ,GAAjB,CAAlB;AACAJ,EAAAA,EAAE,CAACS,yBAAH,CAA6BH,CAA7B,EAAgCC,WAAhC,EAA6CF,KAA7C;AACA,CAJD;;AAMA,IAAIK,YAAY,GAAG,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,OAArB,EAA8B;AAChD,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoC,EAAED,CAAtC,EAAyC;AACxC,QAAIE,KAAK,GAAGH,OAAO,CAACC,CAAD,CAAnB;;AACA,QAAId,EAAE,CAACiB,IAAH,CAAQD,KAAR,MAAmB,QAAvB,EAAiC;AAChC,YAAM,IAAIE,SAAJ,CAAc,gDAAd,CAAN;AACA;;AAED,QAAId,GAAG,GAAGJ,EAAE,CAACmB,GAAH,CAAOH,KAAP,EAAc,GAAd,CAAV;AACA,QAAIX,KAAK,GAAGL,EAAE,CAACmB,GAAH,CAAOH,KAAP,EAAc,GAAd,CAAZ;AACA,QAAIT,WAAW,GAAGP,EAAE,CAACQ,aAAH,CAAiBJ,GAAjB,CAAlB;AACAJ,IAAAA,EAAE,CAACS,yBAAH,CAA6BG,GAA7B,EAAkCL,WAAlC,EAA+CF,KAA/C;AACA;AACD,CAZD;;AAcA,IAAIe,UAAU,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAAC,KAAD,CAAb,KAAyB,QAA1E;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC/CzB,EAAAA,EAAE,CAAC0B,sBAAH,CAA0BD,QAA1B;AAEA,MAAIb,GAAG,GAAG,EAAV,CAH+C,CAK/C;;AACA,MAAI,CAACQ,UAAL,EAAiB;AAChB,QAAI,CAACpB,EAAE,CAAC2B,OAAH,CAAWF,QAAX,CAAL,EAA2B;AAC1B,YAAM,IAAIP,SAAJ,CAAc,gFAAd,CAAN;AACA;;AACDR,IAAAA,YAAY,CAACE,GAAD,EAAMa,QAAN,CAAZ;AACA,WAAOb,GAAP;AACA;;AAED,SAAOZ,EAAE,CAAC4B,sBAAH,CAA0BhB,GAA1B,EAA+Ba,QAA/B,EAAyCvB,KAAzC,CAAP;AACA,CAfD","sourcesContent":["'use strict';\n\nvar ES = require('es-abstract/es2019');\n\nvar adder = function addDataProperty(key, value) {\n\tvar O = this; // eslint-disable-line no-invalid-this\n\tvar propertyKey = ES.ToPropertyKey(key);\n\tES.CreateDataPropertyOrThrow(O, propertyKey, value);\n};\n\nvar legacyAssign = function assign(obj, entries) {\n\tfor (var i = 0; i < entries.length; ++i) {\n\t\tvar entry = entries[i];\n\t\tif (ES.Type(entry) !== 'Object') {\n\t\t\tthrow new TypeError('iterator returned a non-object; entry expected');\n\t\t}\n\n\t\tvar key = ES.Get(entry, '0');\n\t\tvar value = ES.Get(entry, '1');\n\t\tvar propertyKey = ES.ToPropertyKey(key);\n\t\tES.CreateDataPropertyOrThrow(obj, propertyKey, value);\n\t}\n};\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nmodule.exports = function fromEntries(iterable) {\n\tES.RequireObjectCoercible(iterable);\n\n\tvar obj = {};\n\n\t// this part isn't in the spec, it's for a reasonable fallback for pre-ES6 environments\n\tif (!hasSymbols) {\n\t\tif (!ES.IsArray(iterable)) {\n\t\t\tthrow new TypeError('this environment lacks native Symbols, and can not support non-Array iterables');\n\t\t}\n\t\tlegacyAssign(obj, iterable);\n\t\treturn obj;\n\t}\n\n\treturn ES.AddEntriesFromIterable(obj, iterable, adder);\n};\n"]},"metadata":{},"sourceType":"script"}