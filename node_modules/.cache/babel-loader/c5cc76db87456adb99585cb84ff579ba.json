{"ast":null,"code":"'use strict';\n\nvar ES = require('es-abstract/es6');\n\nmodule.exports = function find(predicate) {\n  var list = ES.ToObject(this);\n  var length = ES.ToLength(list.length);\n\n  if (!ES.IsCallable(predicate)) {\n    throw new TypeError('Array#find: predicate must be a function');\n  }\n\n  if (length === 0) {\n    return void 0;\n  }\n\n  var thisArg;\n\n  if (arguments.length > 0) {\n    thisArg = arguments[1];\n  }\n\n  for (var i = 0, value; i < length; i++) {\n    value = list[i]; // inlined for performance: if (ES.Call(predicate, thisArg, [value, i, list])) {\n\n    if (predicate.apply(thisArg, [value, i, list])) {\n      return value;\n    }\n  }\n\n  return void 0;\n};","map":{"version":3,"sources":["C:/Users/gordon/Desktop/testRecrutement/node_modules/array.prototype.find/implementation.js"],"names":["ES","require","module","exports","find","predicate","list","ToObject","length","ToLength","IsCallable","TypeError","thisArg","arguments","i","value","apply"],"mappings":"AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,iBAAD,CAAhB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,SAAd,EAAyB;AACzC,MAAIC,IAAI,GAAGN,EAAE,CAACO,QAAH,CAAY,IAAZ,CAAX;AACA,MAAIC,MAAM,GAAGR,EAAE,CAACS,QAAH,CAAYH,IAAI,CAACE,MAAjB,CAAb;;AACA,MAAI,CAACR,EAAE,CAACU,UAAH,CAAcL,SAAd,CAAL,EAA+B;AAC9B,UAAM,IAAIM,SAAJ,CAAc,0CAAd,CAAN;AACA;;AACD,MAAIH,MAAM,KAAK,CAAf,EAAkB;AACjB,WAAO,KAAK,CAAZ;AACA;;AACD,MAAII,OAAJ;;AACA,MAAIC,SAAS,CAACL,MAAV,GAAmB,CAAvB,EAA0B;AACzBI,IAAAA,OAAO,GAAGC,SAAS,CAAC,CAAD,CAAnB;AACA;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,KAAhB,EAAuBD,CAAC,GAAGN,MAA3B,EAAmCM,CAAC,EAApC,EAAwC;AACvCC,IAAAA,KAAK,GAAGT,IAAI,CAACQ,CAAD,CAAZ,CADuC,CAEvC;;AACA,QAAIT,SAAS,CAACW,KAAV,CAAgBJ,OAAhB,EAAyB,CAACG,KAAD,EAAQD,CAAR,EAAWR,IAAX,CAAzB,CAAJ,EAAgD;AAC/C,aAAOS,KAAP;AACA;AACD;;AACD,SAAO,KAAK,CAAZ;AACA,CAtBD","sourcesContent":["'use strict';\n\nvar ES = require('es-abstract/es6');\n\nmodule.exports = function find(predicate) {\n\tvar list = ES.ToObject(this);\n\tvar length = ES.ToLength(list.length);\n\tif (!ES.IsCallable(predicate)) {\n\t\tthrow new TypeError('Array#find: predicate must be a function');\n\t}\n\tif (length === 0) {\n\t\treturn void 0;\n\t}\n\tvar thisArg;\n\tif (arguments.length > 0) {\n\t\tthisArg = arguments[1];\n\t}\n\n\tfor (var i = 0, value; i < length; i++) {\n\t\tvalue = list[i];\n\t\t// inlined for performance: if (ES.Call(predicate, thisArg, [value, i, list])) {\n\t\tif (predicate.apply(thisArg, [value, i, list])) {\n\t\t\treturn value;\n\t\t}\n\t}\n\treturn void 0;\n};\n"]},"metadata":{},"sourceType":"script"}