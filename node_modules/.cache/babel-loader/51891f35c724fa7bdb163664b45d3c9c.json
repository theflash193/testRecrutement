{"ast":null,"code":"'use strict';\n\nvar isCallable = require('is-callable');\n\nvar functionsHaveNames = require('functions-have-names')();\n\nvar bind = require('function-bind');\n\nvar functionToString = bind.call(Function.call, Function.prototype.toString);\nvar stringMatch = bind.call(Function.call, String.prototype.match);\nvar classRegex = /^class /;\n\nvar isClass = function isClassConstructor(fn) {\n  if (isCallable(fn)) {\n    return false;\n  }\n\n  if (typeof fn !== 'function') {\n    return false;\n  }\n\n  try {\n    var match = stringMatch(functionToString(fn), classRegex);\n    return !!match;\n  } catch (e) {}\n\n  return false;\n};\n\nvar regex = /\\s*function\\s+([^(\\s]*)\\s*/;\nvar functionProto = Function.prototype;\n\nmodule.exports = function getName() {\n  if (!isClass(this) && !isCallable(this)) {\n    throw new TypeError('Function.prototype.name sham getter called on non-function');\n  }\n\n  if (functionsHaveNames) {\n    return this.name;\n  }\n\n  if (this === functionProto) {\n    return '';\n  }\n\n  var str = functionToString(this);\n  var match = stringMatch(str, regex);\n  var name = match && match[1];\n  return name;\n};","map":{"version":3,"sources":["C:/Users/gordon/Desktop/testRecrutement/node_modules/function.prototype.name/implementation.js"],"names":["isCallable","require","functionsHaveNames","bind","functionToString","call","Function","prototype","toString","stringMatch","String","match","classRegex","isClass","isClassConstructor","fn","e","regex","functionProto","module","exports","getName","TypeError","name","str"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAIC,kBAAkB,GAAGD,OAAO,CAAC,sBAAD,CAAP,EAAzB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,eAAD,CAAlB;;AACA,IAAIG,gBAAgB,GAAGD,IAAI,CAACE,IAAL,CAAUC,QAAQ,CAACD,IAAnB,EAAyBC,QAAQ,CAACC,SAAT,CAAmBC,QAA5C,CAAvB;AACA,IAAIC,WAAW,GAAGN,IAAI,CAACE,IAAL,CAAUC,QAAQ,CAACD,IAAnB,EAAyBK,MAAM,CAACH,SAAP,CAAiBI,KAA1C,CAAlB;AAEA,IAAIC,UAAU,GAAG,SAAjB;;AAEA,IAAIC,OAAO,GAAG,SAASC,kBAAT,CAA4BC,EAA5B,EAAgC;AAC7C,MAAIf,UAAU,CAACe,EAAD,CAAd,EAAoB;AACnB,WAAO,KAAP;AACA;;AACD,MAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;AAC7B,WAAO,KAAP;AACA;;AACD,MAAI;AACH,QAAIJ,KAAK,GAAGF,WAAW,CAACL,gBAAgB,CAACW,EAAD,CAAjB,EAAuBH,UAAvB,CAAvB;AACA,WAAO,CAAC,CAACD,KAAT;AACA,GAHD,CAGE,OAAOK,CAAP,EAAU,CAAE;;AACd,SAAO,KAAP;AACA,CAZD;;AAcA,IAAIC,KAAK,GAAG,4BAAZ;AAEA,IAAIC,aAAa,GAAGZ,QAAQ,CAACC,SAA7B;;AAEAY,MAAM,CAACC,OAAP,GAAiB,SAASC,OAAT,GAAmB;AACnC,MAAI,CAACR,OAAO,CAAC,IAAD,CAAR,IAAkB,CAACb,UAAU,CAAC,IAAD,CAAjC,EAAyC;AACxC,UAAM,IAAIsB,SAAJ,CAAc,4DAAd,CAAN;AACA;;AACD,MAAIpB,kBAAJ,EAAwB;AACvB,WAAO,KAAKqB,IAAZ;AACA;;AACD,MAAI,SAASL,aAAb,EAA4B;AAC3B,WAAO,EAAP;AACA;;AACD,MAAIM,GAAG,GAAGpB,gBAAgB,CAAC,IAAD,CAA1B;AACA,MAAIO,KAAK,GAAGF,WAAW,CAACe,GAAD,EAAMP,KAAN,CAAvB;AACA,MAAIM,IAAI,GAAGZ,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAzB;AACA,SAAOY,IAAP;AACA,CAdD","sourcesContent":["'use strict';\n\nvar isCallable = require('is-callable');\nvar functionsHaveNames = require('functions-have-names')();\nvar bind = require('function-bind');\nvar functionToString = bind.call(Function.call, Function.prototype.toString);\nvar stringMatch = bind.call(Function.call, String.prototype.match);\n\nvar classRegex = /^class /;\n\nvar isClass = function isClassConstructor(fn) {\n\tif (isCallable(fn)) {\n\t\treturn false;\n\t}\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\ttry {\n\t\tvar match = stringMatch(functionToString(fn), classRegex);\n\t\treturn !!match;\n\t} catch (e) {}\n\treturn false;\n};\n\nvar regex = /\\s*function\\s+([^(\\s]*)\\s*/;\n\nvar functionProto = Function.prototype;\n\nmodule.exports = function getName() {\n\tif (!isClass(this) && !isCallable(this)) {\n\t\tthrow new TypeError('Function.prototype.name sham getter called on non-function');\n\t}\n\tif (functionsHaveNames) {\n\t\treturn this.name;\n\t}\n\tif (this === functionProto) {\n\t\treturn '';\n\t}\n\tvar str = functionToString(this);\n\tvar match = stringMatch(str, regex);\n\tvar name = match && match[1];\n\treturn name;\n};\n"]},"metadata":{},"sourceType":"script"}