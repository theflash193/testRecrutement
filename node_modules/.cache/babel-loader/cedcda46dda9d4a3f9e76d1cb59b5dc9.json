{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gordon\\\\Desktop\\\\testRecrutement\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport promise from 'redux-promise-middleware';\nimport { resolve } from 'url';\nimport { reject } from 'q'; // let store = createStore();\n// const  = () => { \n// }\n\nconst increment = () => {\n  return {\n    type: 'INCREMENT'\n  };\n};\n\nconst uploadBooks = () => {\n  return {\n    type: 'INCREMENT',\n    payload: new Promise((resolve, reject) => {\n      fetch;\n    })\n  };\n};\n\nconst initialState = {\n  books: {},\n  filterBooks: {}\n};\n\nconst book = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(book, applyMiddleware(promise));\nstore.subscribe(() => console.log(store.getState()));\nconsole.log(store.getState()); // store.dispatch(uploadBooks());\n// store.dispatch(increment());\n// store.dispatch(increment());\n// store.dispatch(increment());              \n// store.dispatch(increment());\n// store.dispatch(increment());\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/gordon/Desktop/testRecrutement/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","applyMiddleware","promise","resolve","reject","increment","type","uploadBooks","payload","Promise","fetch","initialState","books","filterBooks","book","state","action","store","subscribe","console","log","getState","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAAQC,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,OAAT,QAAwB,KAAxB;AACA,SAASC,MAAT,QAAuB,GAAvB,C,CACA;AACA;AAEA;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,SAAO;AACHC,IAAAA,IAAI,EAAE;AADH,GAAP;AAGF,CAJF;;AAMA,MAAMC,WAAW,GAAG,MAAM;AACtB,SAAO;AACHD,IAAAA,IAAI,EAAE,WADH;AAEHE,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY,CAACN,OAAD,EAAUC,MAAV,KAAqB;AACtCM,MAAAA,KAAK;AACP,KAFO;AAFN,GAAP;AAMF,CAPF;;AASA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,WAAW,EAAE;AAFI,CAArB;;AAKA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC3C,UAAQA,MAAM,CAACV,IAAf;AACI;AACI,aAAOS,KAAP;AAFR;AAIH,CALD;;AAOA,MAAME,KAAK,GAAGjB,WAAW,CAACc,IAAD,EAAOb,eAAe,CAACC,OAAD,CAAtB,CAAzB;AAEAe,KAAK,CAACC,SAAN,CAAgB,MAAMC,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ,CAAtB;AAEAF,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ,E,CACA;AACA;AACA;AACA;AACA;AACA;;AAEAxB,QAAQ,CAACyB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAzB,aAAa,CAAC0B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux';\nimport promise from 'redux-promise-middleware';\nimport { resolve } from 'url';\nimport { reject } from 'q';\n// let store = createStore();\n// const  = () => { \n    \n// }\n\nconst increment = () => { \n    return { \n        type: 'INCREMENT'\n     }\n };\n\nconst uploadBooks = () => { \n    return { \n        type: 'INCREMENT',\n        payload: new Promise((resolve, reject) => { \n            fetch\n         })\n     }\n };\n\nconst initialState = { \n    books: {},\n    filterBooks: {},\n}\n\nconst book = (state = initialState, action) => { \n    switch (action.type) {\n        default:\n            return state;\n    }\n}\n\nconst store = createStore(book, applyMiddleware(promise));\n\nstore.subscribe(() => console.log(store.getState()));\n\nconsole.log(store.getState());\n// store.dispatch(uploadBooks());\n// store.dispatch(increment());\n// store.dispatch(increment());\n// store.dispatch(increment());              \n// store.dispatch(increment());\n// store.dispatch(increment());\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}